
;; Function std::ctype<char>::do_widen (_ZNKSt5ctypeIcE8do_widenEc, funcdef_no=1810, decl_uid=43557, cgraph_uid=515, symbol_order=551)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
char_type std::ctype<char>::do_widen (const struct ctype * const this, char __c)
{
  <bb 2> [local count: 1073741824]:
  return __c_1(D);

}



;; Function main (main, funcdef_no=2057, decl_uid=50632, cgraph_uid=525, symbol_order=562) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

i_4 -> { i_2 }
f_20 -> { f_3 }
f_22 -> { f_3 }
f_23 -> { f_3 }
n.0_37 -> { n.0_1 }
i_45 -> { i_2 }
Incremental SSA update started at block: 12
Number of blocks in CFG: 15
Number of blocks to update: 6 ( 40%)


Merging blocks 2 and 12
Merging blocks 3 and 4
Removing basic block 13
Removing basic block 14
int main ()
{
  int f;
  int n;
  int i;
  int n.0_1;
  struct basic_ostream & _8;
  int (*) () * _13;
  long int _14;
  sizetype _15;
  struct basic_ios * _16;
  int _18;
  struct basic_ostream & _19;
  const struct __ctype_type * _21;
  char _26;
  char _29;
  char _32;
  int (*) () * _34;
  int (*) () _35;
  int n.0_37;
  void * PROF_39;
  char _41;

  <bb 2> [local count: 118111600]:
  std::basic_istream<char>::operator>> (&cin, &n);
  n.0_37 = n;
  if (n.0_37 > 1)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 3> [local count: 955630225]:
  # i_4 = PHI <i_11(3), 2(2)>
  # f_22 = PHI <f_10(3), 1(2)>
  f_10 = i_4 * f_22;
  i_11 = i_4 + 1;
  n.0_1 = n;
  if (n.0_1 >= i_11)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 118111600]:
  # f_23 = PHI <f_10(3), 1(2)>
  _8 = std::basic_ostream<char>::operator<< (&cout, f_23);
  _13 = _8->_vptr.basic_ostream;
  _14 = MEM[(long int *)_13 + -24B];
  _15 = (sizetype) _14;
  _16 = _8 + _15;
  _21 = MEM[(const struct __ctype_type * *)_16 + 240B];
  if (_21 == 0B)
    goto <bb 5>; [0.04%]
  else
    goto <bb 6>; [99.96%]

  <bb 5> [local count: 47245]:
  std::__throw_bad_cast ();

  <bb 6> [local count: 118064356]:
  _26 = MEM[(const struct ctype *)_21]._M_widen_ok;
  if (_26 != 0)
    goto <bb 7>; [51.12%]
  else
    goto <bb 8>; [48.88%]

  <bb 7> [local count: 60354499]:
  _29 = MEM[(const struct ctype *)_21]._M_widen[10];
  goto <bb 10>; [100.00%]

  <bb 8> [local count: 57709857]:
  std::ctype<char>::_M_widen_init (_21);
  _34 = MEM[(const struct ctype *)_21].D.43629._vptr.facet;
  _35 = MEM[(int (*) () *)_34 + 48B];
  PROF_39 = [obj_type_ref] OBJ_TYPE_REF(_35;(const struct ctype)_21->6B);
  if (PROF_39 == do_widen)
    goto <bb 10>; [80.00%]
  else
    goto <bb 9>; [20.00%]

  <bb 9> [local count: 11541971]:
  _41 = OBJ_TYPE_REF(_35;(const struct ctype)_21->6B) (_21, 10);

  <bb 10> [local count: 118064356]:
  # _32 = PHI <_29(7), 10(8), _41(9)>
  _18 = (int) _32;
  _19 = std::basic_ostream<char>::put (_8, _18);
  std::basic_ostream<char>::flush (_19);
  n ={v} {CLOBBER(eol)};
  return 0;

}


