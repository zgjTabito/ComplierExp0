
lab1-x86.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 81 ec 10 01 00 00 	sub    rsp,0x110
   b:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  12:	89 7d f8             	mov    DWORD PTR [rbp-0x8],edi
  15:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  19:	31 ff                	xor    edi,edi
  1b:	e8 00 00 00 00       	call   20 <main+0x20>	1c: R_X86_64_PLT32	std::ios_base::sync_with_stdio(bool)-0x4
  20:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # 27 <main+0x27>	23: R_X86_64_REX_GOTPCRELX	std::cin-0x4
  27:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2a:	48 8b 3d 00 00 00 00 	mov    rdi,QWORD PTR [rip+0x0]        # 31 <main+0x31>	2d: R_X86_64_REX_GOTPCRELX	std::cin-0x4
  31:	48 03 78 e8          	add    rdi,QWORD PTR [rax-0x18]
  35:	31 c0                	xor    eax,eax
  37:	89 c6                	mov    esi,eax
  39:	e8 00 00 00 00       	call   3e <main+0x3e>	3a: R_X86_64_PLT32	std::basic_ios<char, std::char_traits<char> >::tie(std::ostream*)-0x4
  3e:	83 7d f8 01          	cmp    DWORD PTR [rbp-0x8],0x1
  42:	7e 1e                	jle    62 <main+0x62>
  44:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  48:	48 8b 78 08          	mov    rdi,QWORD PTR [rax+0x8]
  4c:	31 c0                	xor    eax,eax
  4e:	89 c6                	mov    esi,eax
  50:	ba 0a 00 00 00       	mov    edx,0xa
  55:	e8 00 00 00 00       	call   5a <main+0x5a>	56: R_X86_64_PLT32	__isoc23_strtoul-0x4
  5a:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
  60:	eb 0d                	jmp    6f <main+0x6f>
  62:	b8 00 e1 f5 05       	mov    eax,0x5f5e100
  67:	89 85 64 ff ff ff    	mov    DWORD PTR [rbp-0x9c],eax
  6d:	eb 00                	jmp    6f <main+0x6f>
  6f:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [rbp-0x9c]
  75:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
  78:	83 7d f8 02          	cmp    DWORD PTR [rbp-0x8],0x2
  7c:	7e 15                	jle    93 <main+0x93>
  7e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  82:	48 8b 78 10          	mov    rdi,QWORD PTR [rax+0x10]
  86:	e8 00 00 00 00       	call   8b <main+0x8b>	87: R_X86_64_PLT32	atoi-0x4
  8b:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
  91:	eb 0d                	jmp    a0 <main+0xa0>
  93:	b8 03 00 00 00       	mov    eax,0x3
  98:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
  9e:	eb 00                	jmp    a0 <main+0xa0>
  a0:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
  a6:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
  a9:	bf e8 03 00 00       	mov    edi,0x3e8
  ae:	e8 ad 02 00 00       	call   360 <factorial_mod(unsigned int)>
  b3:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  b7:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
  bb:	48 89 bd 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rdi
  c2:	e8 00 00 00 00       	call   c7 <main+0xc7>	c3: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::vector()-0x4
  c7:	48 8b bd 58 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa8]
  ce:	48 63 75 e8          	movsxd rsi,DWORD PTR [rbp-0x18]
  d2:	e8 00 00 00 00       	call   d7 <main+0xd7>	d3: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::reserve(unsigned long)-0x4
  d7:	eb 00                	jmp    d9 <main+0xd9>
  d9:	c7 45 b8 00 00 00 00 	mov    DWORD PTR [rbp-0x48],0x0
  e0:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
  e3:	3b 45 e8             	cmp    eax,DWORD PTR [rbp-0x18]
  e6:	0f 8d be 00 00 00    	jge    1aa <main+0x1aa>
  ec:	e8 00 00 00 00       	call   f1 <main+0xf1>	ed: R_X86_64_PLT32	std::chrono::_V2::steady_clock::now()-0x4
  f1:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  f5:	8b 7d ec             	mov    edi,DWORD PTR [rbp-0x14]
  f8:	e8 63 02 00 00       	call   360 <factorial_mod(unsigned int)>
  fd:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
 104:	eb 00                	jmp    106 <main+0x106>
 106:	48 8b 8d 50 ff ff ff 	mov    rcx,QWORD PTR [rbp-0xb0]
 10d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 111:	48 31 c8             	xor    rax,rcx
 114:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
 118:	e8 00 00 00 00       	call   11d <main+0x11d>	119: R_X86_64_PLT32	std::chrono::_V2::steady_clock::now()-0x4
 11d:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
 121:	48 8d 7d a8          	lea    rdi,[rbp-0x58]
 125:	48 8d 75 b0          	lea    rsi,[rbp-0x50]
 129:	e8 00 00 00 00       	call   12e <main+0x12e>	12a: R_X86_64_PLT32	std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)-0x4
 12e:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
 135:	eb 00                	jmp    137 <main+0x137>
 137:	48 8b 85 48 ff ff ff 	mov    rax,QWORD PTR [rbp-0xb8]
 13e:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
 142:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
 146:	48 8d 75 90          	lea    rsi,[rbp-0x70]
 14a:	e8 00 00 00 00       	call   14f <main+0x14f>	14b: R_X86_64_PLT32	std::chrono::duration<double, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)-0x4
 14f:	eb 00                	jmp    151 <main+0x151>
 151:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
 155:	e8 00 00 00 00       	call   15a <main+0x15a>	156: R_X86_64_PLT32	std::chrono::duration<double, std::ratio<1l, 1000l> >::count() const-0x4
 15a:	f2 0f 11 85 40 ff ff ff 	movsd  QWORD PTR [rbp-0xc0],xmm0
 162:	eb 00                	jmp    164 <main+0x164>
 164:	f2 0f 10 85 40 ff ff ff 	movsd  xmm0,QWORD PTR [rbp-0xc0]
 16c:	f2 0f 11 45 a0       	movsd  QWORD PTR [rbp-0x60],xmm0
 171:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
 175:	48 8d 75 a0          	lea    rsi,[rbp-0x60]
 179:	e8 00 00 00 00       	call   17e <main+0x17e>	17a: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::push_back(double&&)-0x4
 17e:	eb 00                	jmp    180 <main+0x180>
 180:	eb 00                	jmp    182 <main+0x182>
 182:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
 185:	83 c0 01             	add    eax,0x1
 188:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
 18b:	e9 50 ff ff ff       	jmp    e0 <main+0xe0>
 190:	48 89 c1             	mov    rcx,rax
 193:	89 d0                	mov    eax,edx
 195:	48 89 4d c0          	mov    QWORD PTR [rbp-0x40],rcx
 199:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
 19c:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
 1a0:	e8 00 00 00 00       	call   1a5 <main+0x1a5>	1a1: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::~vector()-0x4
 1a5:	e9 a7 01 00 00       	jmp    351 <main+0x351>
 1aa:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
 1ae:	48 89 bd 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rdi
 1b5:	e8 00 00 00 00       	call   1ba <main+0x1ba>	1b6: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::begin()-0x4
 1ba:	48 8b bd 38 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc8]
 1c1:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
 1c5:	e8 00 00 00 00       	call   1ca <main+0x1ca>	1c6: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::begin()-0x4
 1ca:	48 8b bd 38 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc8]
 1d1:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
 1d8:	e8 00 00 00 00       	call   1dd <main+0x1dd>	1d9: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::size() const-0x4
 1dd:	48 89 c6             	mov    rsi,rax
 1e0:	48 d1 ee             	shr    rsi,1
 1e3:	48 8d bd 78 ff ff ff 	lea    rdi,[rbp-0x88]
 1ea:	e8 00 00 00 00       	call   1ef <main+0x1ef>	1eb: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
 1ef:	48 8b bd 38 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc8]
 1f6:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
 1fa:	e8 00 00 00 00       	call   1ff <main+0x1ff>	1fb: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::end()-0x4
 1ff:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
 206:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
 20a:	48 8b 75 80          	mov    rsi,QWORD PTR [rbp-0x80]
 20e:	48 8b 95 70 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x90]
 215:	e8 00 00 00 00       	call   21a <main+0x21a>	216: R_X86_64_PLT32	void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
 21a:	eb 00                	jmp    21c <main+0x21c>
 21c:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
 220:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
 227:	e8 00 00 00 00       	call   22c <main+0x22c>	228: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::size() const-0x4
 22c:	48 8b bd 28 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd8]
 233:	48 89 c6             	mov    rsi,rax
 236:	48 d1 ee             	shr    rsi,1
 239:	e8 00 00 00 00       	call   23e <main+0x23e>	23a: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::operator[](unsigned long)-0x4
 23e:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
 242:	f2 0f 11 85 68 ff ff ff 	movsd  QWORD PTR [rbp-0x98],xmm0
 24a:	48 8b 3d 00 00 00 00 	mov    rdi,QWORD PTR [rip+0x0]        # 251 <main+0x251>	24d: R_X86_64_REX_GOTPCRELX	std::cout-0x4
 251:	48 8d 35 00 00 00 00 	lea    rsi,[rip+0x0]        # 258 <main+0x258>	254: R_X86_64_PC32	.L.str-0x4
 258:	e8 00 00 00 00       	call   25d <main+0x25d>	259: R_X86_64_PLT32	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)-0x4
 25d:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
 264:	eb 00                	jmp    266 <main+0x266>
 266:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
 26d:	8b 75 ec             	mov    esi,DWORD PTR [rbp-0x14]
 270:	e8 00 00 00 00       	call   275 <main+0x275>	271: R_X86_64_PLT32	std::ostream::operator<<(unsigned int)-0x4
 275:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
 27c:	eb 00                	jmp    27e <main+0x27e>
 27e:	48 8b bd 20 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe0]
 285:	48 8d 35 00 00 00 00 	lea    rsi,[rip+0x0]        # 28c <main+0x28c>	288: R_X86_64_PC32	.L.str.1-0x4
 28c:	e8 00 00 00 00       	call   291 <main+0x291>	28d: R_X86_64_PLT32	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)-0x4
 291:	48 89 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],rax
 298:	eb 00                	jmp    29a <main+0x29a>
 29a:	48 8b bd 18 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xe8]
 2a1:	8b 75 e8             	mov    esi,DWORD PTR [rbp-0x18]
 2a4:	e8 00 00 00 00       	call   2a9 <main+0x2a9>	2a5: R_X86_64_PLT32	std::ostream::operator<<(int)-0x4
 2a9:	48 89 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],rax
 2b0:	eb 00                	jmp    2b2 <main+0x2b2>
 2b2:	48 8b bd 10 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xf0]
 2b9:	48 8d 35 00 00 00 00 	lea    rsi,[rip+0x0]        # 2c0 <main+0x2c0>	2bc: R_X86_64_PC32	.L.str.2-0x4
 2c0:	e8 00 00 00 00       	call   2c5 <main+0x2c5>	2c1: R_X86_64_PLT32	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)-0x4
 2c5:	48 89 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],rax
 2cc:	eb 00                	jmp    2ce <main+0x2ce>
 2ce:	48 8b bd 08 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xf8]
 2d5:	f2 0f 10 85 68 ff ff ff 	movsd  xmm0,QWORD PTR [rbp-0x98]
 2dd:	e8 00 00 00 00       	call   2e2 <main+0x2e2>	2de: R_X86_64_PLT32	std::ostream::operator<<(double)-0x4
 2e2:	48 89 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rax
 2e9:	eb 00                	jmp    2eb <main+0x2eb>
 2eb:	48 8b bd 00 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x100]
 2f2:	48 8d 35 00 00 00 00 	lea    rsi,[rip+0x0]        # 2f9 <main+0x2f9>	2f5: R_X86_64_PC32	.L.str.3-0x4
 2f9:	e8 00 00 00 00       	call   2fe <main+0x2fe>	2fa: R_X86_64_PLT32	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)-0x4
 2fe:	48 89 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],rax
 305:	eb 00                	jmp    307 <main+0x307>
 307:	48 8b bd f8 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x108]
 30e:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
 312:	e8 00 00 00 00       	call   317 <main+0x317>	313: R_X86_64_PLT32	std::ostream::operator<<(unsigned long)-0x4
 317:	48 89 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],rax
 31e:	eb 00                	jmp    320 <main+0x320>
 320:	48 8b bd f0 fe ff ff 	mov    rdi,QWORD PTR [rbp-0x110]
 327:	48 8d 35 00 00 00 00 	lea    rsi,[rip+0x0]        # 32e <main+0x32e>	32a: R_X86_64_PC32	.L.str.4-0x4
 32e:	e8 00 00 00 00       	call   333 <main+0x333>	32f: R_X86_64_PLT32	std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)-0x4
 333:	eb 00                	jmp    335 <main+0x335>
 335:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
 33c:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
 340:	e8 00 00 00 00       	call   345 <main+0x345>	341: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::~vector()-0x4
 345:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 348:	48 81 c4 10 01 00 00 	add    rsp,0x110
 34f:	5d                   	pop    rbp
 350:	c3                   	ret
 351:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
 355:	e8 00 00 00 00       	call   35a <main+0x35a>	356: R_X86_64_PLT32	_Unwind_Resume-0x4
 35a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000360 <factorial_mod(unsigned int)>:
 360:	55                   	push   rbp
 361:	48 89 e5             	mov    rbp,rsp
 364:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 367:	48 c7 45 f0 07 ca 9a 3b 	mov    QWORD PTR [rbp-0x10],0x3b9aca07
 36f:	48 c7 45 e8 01 00 00 00 	mov    QWORD PTR [rbp-0x18],0x1
 377:	c7 45 e4 02 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x2
 37e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 381:	3b 45 fc             	cmp    eax,DWORD PTR [rbp-0x4]
 384:	77 24                	ja     3aa <factorial_mod(unsigned int)+0x4a>
 386:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 38a:	8b 4d e4             	mov    ecx,DWORD PTR [rbp-0x1c]
 38d:	48 0f af c1          	imul   rax,rcx
 391:	b9 07 ca 9a 3b       	mov    ecx,0x3b9aca07
 396:	31 d2                	xor    edx,edx
 398:	48 f7 f1             	div    rcx
 39b:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
 39f:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 3a2:	83 c0 01             	add    eax,0x1
 3a5:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
 3a8:	eb d4                	jmp    37e <factorial_mod(unsigned int)+0x1e>
 3aa:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 3ae:	5d                   	pop    rbp
 3af:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEEC2Ev:

0000000000000000 <std::vector<double, std::allocator<double> >::vector()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  10:	e8 00 00 00 00       	call   15 <std::vector<double, std::allocator<double> >::vector()+0x15>	11: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_Vector_base()-0x4
  15:	48 83 c4 10          	add    rsp,0x10
  19:	5d                   	pop    rbp
  1a:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEE7reserveEm:

0000000000000000 <std::vector<double, std::allocator<double> >::reserve(unsigned long)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 50          	sub    rsp,0x50
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  14:	48 89 7d d0          	mov    QWORD PTR [rbp-0x30],rdi
  18:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  1c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  20:	e8 00 00 00 00       	call   25 <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0x25>	21: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::max_size() const-0x4
  25:	48 89 c1             	mov    rcx,rax
  28:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  2c:	48 39 c8             	cmp    rax,rcx
  2f:	76 0c                	jbe    3d <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0x3d>
  31:	48 8d 3d 00 00 00 00 	lea    rdi,[rip+0x0]        # 38 <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0x38>	34: R_X86_64_PC32	.L.str.5-0x4
  38:	e8 00 00 00 00       	call   3d <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0x3d>	39: R_X86_64_PLT32	std::__throw_length_error(char const*)-0x4
  3d:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  41:	e8 00 00 00 00       	call   46 <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0x46>	42: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::capacity() const-0x4
  46:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
  4a:	0f 83 9c 00 00 00    	jae    ec <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0xec>
  50:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  54:	e8 00 00 00 00       	call   59 <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0x59>	55: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::size() const-0x4
  59:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  5d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  61:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  65:	e8 00 00 00 00       	call   6a <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0x6a>	66: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)-0x4
  6a:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  6e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  72:	48 8b 07             	mov    rax,QWORD PTR [rdi]
  75:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  79:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
  7d:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  81:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  85:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  89:	e8 00 00 00 00       	call   8e <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0x8e>	8a: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()-0x4
  8e:	48 8b 7d b8          	mov    rdi,QWORD PTR [rbp-0x48]
  92:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
  96:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
  9a:	48 89 c1             	mov    rcx,rax
  9d:	e8 00 00 00 00       	call   a2 <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0xa2>	9e: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::_S_relocate(double*, double*, double*, std::allocator<double>&)-0x4
  a2:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  a6:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
  a9:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
  ad:	48 8b 07             	mov    rax,QWORD PTR [rdi]
  b0:	48 29 c2             	sub    rdx,rax
  b3:	48 c1 fa 03          	sar    rdx,0x3
  b7:	e8 00 00 00 00       	call   bc <std::vector<double, std::allocator<double> >::reserve(unsigned long)+0xbc>	b8: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)-0x4
  bc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  c0:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  c4:	48 89 08             	mov    QWORD PTR [rax],rcx
  c7:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  cb:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  cf:	48 c1 e2 03          	shl    rdx,0x3
  d3:	48 01 d1             	add    rcx,rdx
  d6:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
  da:	48 8b 08             	mov    rcx,QWORD PTR [rax]
  dd:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  e1:	48 c1 e2 03          	shl    rdx,0x3
  e5:	48 01 d1             	add    rcx,rdx
  e8:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
  ec:	48 83 c4 50          	add    rsp,0x50
  f0:	5d                   	pop    rbp
  f1:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEE9push_backEOd:

0000000000000000 <std::vector<double, std::allocator<double> >::push_back(double&&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  14:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  18:	e8 00 00 00 00       	call   1d <std::vector<double, std::allocator<double> >::push_back(double&&)+0x1d>	19: R_X86_64_PLT32	double& std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)-0x4
  1d:	48 83 c4 10          	add    rsp,0x10
  21:	5d                   	pop    rbp
  22:	c3                   	ret

Disassembly of section .text._ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE:

0000000000000000 <std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 30          	sub    rsp,0x30
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  14:	e8 00 00 00 00       	call   19 <std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)+0x19>	15: R_X86_64_PLT32	std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const-0x4
  19:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  1d:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
  21:	e8 00 00 00 00       	call   26 <std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)+0x26>	22: R_X86_64_PLT32	std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const-0x4
  26:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  2a:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
  2e:	48 8d 75 d8          	lea    rsi,[rbp-0x28]
  32:	e8 00 00 00 00       	call   37 <std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)+0x37>	33: R_X86_64_PLT32	std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)-0x4
  37:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  3b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  3f:	48 83 c4 30          	add    rsp,0x30
  43:	5d                   	pop    rbp
  44:	c3                   	ret

Disassembly of section .text._ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEC2IlS1_ILl1ELl1000000000EEvEERKNS0_IT_T0_EE:

0000000000000000 <std::chrono::duration<double, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  14:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  18:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  1c:	e8 00 00 00 00       	call   21 <std::chrono::duration<double, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)+0x21>	1d: R_X86_64_PLT32	std::enable_if<__is_duration<std::chrono::duration<double, std::ratio<1l, 1000l> > >::value, std::chrono::duration<double, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)-0x4
  21:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
  26:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  2a:	e8 00 00 00 00       	call   2f <std::chrono::duration<double, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)+0x2f>	2b: R_X86_64_PLT32	std::chrono::duration<double, std::ratio<1l, 1000l> >::count() const-0x4
  2f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  33:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  37:	48 83 c4 20          	add    rsp,0x20
  3b:	5d                   	pop    rbp
  3c:	c3                   	ret

Disassembly of section .text._ZNKSt6chrono8durationIdSt5ratioILl1ELl1000EEE5countEv:

0000000000000000 <std::chrono::duration<double, std::ratio<1l, 1000l> >::count() const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  10:	5d                   	pop    rbp
  11:	c3                   	ret

Disassembly of section .text._ZSt11nth_elementIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEEvT_S7_S7_:

0000000000000000 <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 40          	sub    rsp,0x40
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  18:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
  1c:	e8 00 00 00 00       	call   21 <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x21>	1d: R_X86_64_PLT32	bool __gnu_cxx::operator==<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  21:	a8 01                	test   al,0x1
  23:	75 13                	jne    38 <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x38>
  25:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  29:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
  2d:	e8 00 00 00 00       	call   32 <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x32>	2e: R_X86_64_PLT32	bool __gnu_cxx::operator==<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  32:	a8 01                	test   al,0x1
  34:	75 02                	jne    38 <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x38>
  36:	eb 02                	jmp    3a <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x3a>
  38:	eb 4e                	jmp    88 <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x88>
  3a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  3e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  42:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  46:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  4a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  52:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  56:	48 8d 75 f8          	lea    rsi,[rbp-0x8]
  5a:	e8 00 00 00 00       	call   5f <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x5f>	5b: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  5f:	48 89 c7             	mov    rdi,rax
  62:	e8 00 00 00 00       	call   67 <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x67>	63: R_X86_64_PLT32	long std::__lg<long>(long)-0x4
  67:	48 d1 e0             	shl    rax,1
  6a:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  6e:	e8 00 00 00 00       	call   73 <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x73>	6f: R_X86_64_PLT32	__gnu_cxx::__ops::__iter_less_iter()-0x4
  73:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
  77:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
  7b:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
  7f:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  83:	e8 00 00 00 00       	call   88 <void std::nth_element<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x88>	84: R_X86_64_PLT32	void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)-0x4
  88:	48 83 c4 40          	add    rsp,0x40
  8c:	5d                   	pop    rbp
  8d:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEE5beginEv:

0000000000000000 <std::vector<double, std::allocator<double> >::begin()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  10:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  14:	e8 00 00 00 00       	call   19 <std::vector<double, std::allocator<double> >::begin()+0x19>	15: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&)-0x4
  19:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  1d:	48 83 c4 10          	add    rsp,0x10
  21:	5d                   	pop    rbp
  22:	c3                   	ret

Disassembly of section .text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEplEl:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  14:	48 8b 00             	mov    rax,QWORD PTR [rax]
  17:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  1b:	48 c1 e1 03          	shl    rcx,0x3
  1f:	48 01 c8             	add    rax,rcx
  22:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  26:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  2a:	48 8d 75 e0          	lea    rsi,[rbp-0x20]
  2e:	e8 00 00 00 00       	call   33 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const+0x33>	2f: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&)-0x4
  33:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  37:	48 83 c4 20          	add    rsp,0x20
  3b:	5d                   	pop    rbp
  3c:	c3                   	ret

Disassembly of section .text._ZNKSt6vectorIdSaIdEE4sizeEv:

0000000000000000 <std::vector<double, std::allocator<double> >::size() const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   c:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
  10:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
  13:	48 29 c8             	sub    rax,rcx
  16:	48 c1 f8 03          	sar    rax,0x3
  1a:	5d                   	pop    rbp
  1b:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEE3endEv:

0000000000000000 <std::vector<double, std::allocator<double> >::end()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  10:	48 83 c6 08          	add    rsi,0x8
  14:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  18:	e8 00 00 00 00       	call   1d <std::vector<double, std::allocator<double> >::end()+0x1d>	19: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&)-0x4
  1d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  21:	48 83 c4 10          	add    rsp,0x10
  25:	5d                   	pop    rbp
  26:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEEixEm:

0000000000000000 <std::vector<double, std::allocator<double> >::operator[](unsigned long)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  10:	48 8b 00             	mov    rax,QWORD PTR [rax]
  13:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  17:	48 c1 e1 03          	shl    rcx,0x3
  1b:	48 01 c8             	add    rax,rcx
  1e:	5d                   	pop    rbp
  1f:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEED2Ev:

0000000000000000 <std::vector<double, std::allocator<double> >::~vector()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 40          	sub    rsp,0x40
   8:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
   c:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
  10:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
  14:	48 8b 07             	mov    rax,QWORD PTR [rdi]
  17:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  1b:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
  1f:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  23:	e8 00 00 00 00       	call   28 <std::vector<double, std::allocator<double> >::~vector()+0x28>	24: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()-0x4
  28:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  2c:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
  30:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
  34:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  38:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  3c:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  40:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  44:	e8 00 00 00 00       	call   49 <std::vector<double, std::allocator<double> >::~vector()+0x49>	45: R_X86_64_PLT32	void std::_Destroy<double*>(double*, double*)-0x4
  49:	eb 00                	jmp    4b <std::vector<double, std::allocator<double> >::~vector()+0x4b>
  4b:	eb 00                	jmp    4d <std::vector<double, std::allocator<double> >::~vector()+0x4d>
  4d:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
  51:	e8 00 00 00 00       	call   56 <std::vector<double, std::allocator<double> >::~vector()+0x56>	52: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::~_Vector_base()-0x4
  56:	48 83 c4 40          	add    rsp,0x40
  5a:	5d                   	pop    rbp
  5b:	c3                   	ret
  5c:	48 89 c7             	mov    rdi,rax
  5f:	e8 00 00 00 00       	call   64 <.L.str.6+0x2c>	60: R_X86_64_PLT32	__clang_call_terminate-0x4

Disassembly of section .text._ZNSt12_Vector_baseIdSaIdEEC2Ev:

0000000000000000 <std::_Vector_base<double, std::allocator<double> >::_Vector_base()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  10:	e8 00 00 00 00       	call   15 <std::_Vector_base<double, std::allocator<double> >::_Vector_base()+0x15>	11: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl()-0x4
  15:	48 83 c4 10          	add    rsp,0x10
  19:	5d                   	pop    rbp
  1a:	c3                   	ret

Disassembly of section .text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev:

0000000000000000 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   c:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
  10:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  14:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  18:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  1c:	e8 00 00 00 00       	call   21 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl()+0x21>	1d: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_Vector_impl_data()-0x4
  21:	48 83 c4 20          	add    rsp,0x20
  25:	5d                   	pop    rbp
  26:	c3                   	ret

Disassembly of section .text._ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev:

0000000000000000 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data::_Vector_impl_data()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
  13:	48 c7 40 08 00 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
  1b:	48 c7 40 10 00 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
  23:	5d                   	pop    rbp
  24:	c3                   	ret

Disassembly of section .text._ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_:

0000000000000000 <std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 40          	sub    rsp,0x40
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  14:	48 8b 00             	mov    rax,QWORD PTR [rax]
  17:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  1b:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
  1f:	e8 00 00 00 00       	call   24 <std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)+0x24>	20: R_X86_64_PLT32	std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const-0x4
  24:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  28:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2c:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  33:	48 8d 7d d0          	lea    rdi,[rbp-0x30]
  37:	e8 00 00 00 00       	call   3c <std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)+0x3c>	38: R_X86_64_PLT32	std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const-0x4
  3c:	48 89 c1             	mov    rcx,rax
  3f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  43:	48 29 c8             	sub    rax,rcx
  46:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  4a:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  4e:	48 8d 75 e0          	lea    rsi,[rbp-0x20]
  52:	e8 00 00 00 00       	call   57 <std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)+0x57>	53: R_X86_64_PLT32	std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)-0x4
  57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  5b:	48 83 c4 40          	add    rsp,0x40
  5f:	5d                   	pop    rbp
  60:	c3                   	ret

Disassembly of section .text._ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv:

0000000000000000 <std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  13:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  17:	5d                   	pop    rbp
  18:	c3                   	ret

Disassembly of section .text._ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv:

0000000000000000 <std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   f:	5d                   	pop    rbp
  10:	c3                   	ret

Disassembly of section .text._ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC2IlvEERKT_:

0000000000000000 <std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  10:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  14:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
  17:	48 89 08             	mov    QWORD PTR [rax],rcx
  1a:	5d                   	pop    rbp
  1b:	c3                   	ret

Disassembly of section .text._ZNSt6chrono13duration_castINS_8durationIdSt5ratioILl1ELl1000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsr13__is_durationIT_EE5valueES7_E4typeERKNS1_IT0_T1_EE:

0000000000000000 <std::enable_if<__is_duration<std::chrono::duration<double, std::ratio<1l, 1000l> > >::value, std::chrono::duration<double, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  10:	e8 00 00 00 00       	call   15 <std::enable_if<__is_duration<std::chrono::duration<double, std::ratio<1l, 1000l> > >::value, std::chrono::duration<double, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)+0x15>	11: R_X86_64_PLT32	std::chrono::duration<double, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)-0x4
  15:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
  1a:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
  1f:	48 83 c4 10          	add    rsp,0x10
  23:	5d                   	pop    rbp
  24:	c3                   	ret

Disassembly of section .text._ZNSt6chrono20__duration_cast_implINS_8durationIdSt5ratioILl1ELl1000EEEES2_ILl1ELl1000000EEdLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE:

0000000000000000 <std::chrono::duration<double, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  10:	e8 00 00 00 00       	call   15 <std::chrono::duration<double, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)+0x15>	11: R_X86_64_PLT32	std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const-0x4
  15:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
  1a:	f2 0f 10 0d 00 00 00 00 	movsd  xmm1,QWORD PTR [rip+0x0]        # 22 <std::chrono::duration<double, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)+0x22>	1e: R_X86_64_PC32	.LCPI23_0-0x4
  22:	f2 0f 5e c1          	divsd  xmm0,xmm1
  26:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
  2b:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  2f:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
  33:	e8 00 00 00 00       	call   38 <std::chrono::duration<double, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)+0x38>	34: R_X86_64_PLT32	std::chrono::duration<double, std::ratio<1l, 1000l> >::duration<double, void>(double const&)-0x4
  38:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
  3d:	48 83 c4 20          	add    rsp,0x20
  41:	5d                   	pop    rbp
  42:	c3                   	ret

Disassembly of section .text._ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEC2IdvEERKT_:

0000000000000000 <std::chrono::duration<double, std::ratio<1l, 1000l> >::duration<double, void>(double const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  10:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  14:	f2 0f 10 01          	movsd  xmm0,QWORD PTR [rcx]
  18:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  1c:	5d                   	pop    rbp
  1d:	c3                   	ret

Disassembly of section .text._ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv:

0000000000000000 <std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	5d                   	pop    rbp
   d:	c3                   	ret

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	e8 00 00 00 00       	call   9 <__clang_call_terminate+0x9>	5: R_X86_64_PLT32	__cxa_begin_catch-0x4
   9:	e8 00 00 00 00       	call   e <.L.str.2+0x1>	a: R_X86_64_PLT32	std::terminate()-0x4

Disassembly of section .text._ZNSt12_Vector_baseIdSaIdEED2Ev:

0000000000000000 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  10:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  14:	48 8b 37             	mov    rsi,QWORD PTR [rdi]
  17:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
  1b:	48 29 f2             	sub    rdx,rsi
  1e:	48 c1 fa 03          	sar    rdx,0x3
  22:	e8 00 00 00 00       	call   27 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()+0x27>	23: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)-0x4
  27:	eb 00                	jmp    29 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()+0x29>
  29:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  2d:	e8 00 00 00 00       	call   32 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()+0x32>	2e: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()-0x4
  32:	48 83 c4 10          	add    rsp,0x10
  36:	5d                   	pop    rbp
  37:	c3                   	ret
  38:	48 89 c7             	mov    rdi,rax
  3b:	e8 00 00 00 00       	call   40 <.L.str.6+0x8>	3c: R_X86_64_PLT32	__clang_call_terminate-0x4

Disassembly of section .text._ZSt8_DestroyIPdEvT_S1_:

0000000000000000 <void std::_Destroy<double*>(double*, double*)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  14:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  18:	e8 00 00 00 00       	call   1d <void std::_Destroy<double*>(double*, double*)+0x1d>	19: R_X86_64_PLT32	void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)-0x4
  1d:	48 83 c4 10          	add    rsp,0x10
  21:	5d                   	pop    rbp
  22:	c3                   	ret

Disassembly of section .text._ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_:

0000000000000000 <void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   c:	5d                   	pop    rbp
   d:	c3                   	ret

Disassembly of section .text._ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm:

0000000000000000 <std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 40          	sub    rsp,0x40
   8:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
   c:	48 89 75 d8          	mov    QWORD PTR [rbp-0x28],rsi
  10:	48 89 55 d0          	mov    QWORD PTR [rbp-0x30],rdx
  14:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  18:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  1c:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
  21:	74 29                	je     4c <std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)+0x4c>
  23:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
  27:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
  2b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  2f:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
  33:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  37:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  3b:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  3f:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  43:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  47:	e8 00 00 00 00       	call   4c <std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)+0x4c>	48: R_X86_64_PLT32	std::__new_allocator<double>::deallocate(double*, unsigned long)-0x4
  4c:	48 83 c4 40          	add    rsp,0x40
  50:	5d                   	pop    rbp
  51:	c3                   	ret

Disassembly of section .text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev:

0000000000000000 <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  10:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  14:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  18:	e8 00 00 00 00       	call   1d <std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()+0x1d>	19: R_X86_64_PLT32	std::__new_allocator<double>::~__new_allocator()-0x4
  1d:	48 83 c4 10          	add    rsp,0x10
  21:	5d                   	pop    rbp
  22:	c3                   	ret

Disassembly of section .text._ZNSt15__new_allocatorIdE10deallocateEPdm:

0000000000000000 <std::__new_allocator<double>::deallocate(double*, unsigned long)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  18:	e8 00 00 00 00       	call   1d <std::__new_allocator<double>::deallocate(double*, unsigned long)+0x1d>	19: R_X86_64_PLT32	operator delete(void*)-0x4
  1d:	48 83 c4 20          	add    rsp,0x20
  21:	5d                   	pop    rbp
  22:	c3                   	ret

Disassembly of section .text._ZNSt15__new_allocatorIdED2Ev:

0000000000000000 <std::__new_allocator<double>::~__new_allocator()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	5d                   	pop    rbp
   9:	c3                   	ret

Disassembly of section .text._ZNKSt6vectorIdSaIdEE8max_sizeEv:

0000000000000000 <std::vector<double, std::allocator<double> >::max_size() const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  10:	e8 00 00 00 00       	call   15 <std::vector<double, std::allocator<double> >::max_size() const+0x15>	11: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const-0x4
  15:	48 89 c7             	mov    rdi,rax
  18:	e8 00 00 00 00       	call   1d <std::vector<double, std::allocator<double> >::max_size() const+0x1d>	19: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&)-0x4
  1d:	48 83 c4 10          	add    rsp,0x10
  21:	5d                   	pop    rbp
  22:	c3                   	ret

Disassembly of section .text._ZNKSt6vectorIdSaIdEE8capacityEv:

0000000000000000 <std::vector<double, std::allocator<double> >::capacity() const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
   c:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
  10:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
  13:	48 29 c8             	sub    rax,rcx
  16:	48 c1 f8 03          	sar    rax,0x3
  1a:	5d                   	pop    rbp
  1b:	c3                   	ret

Disassembly of section .text._ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm:

0000000000000000 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 30          	sub    rsp,0x30
   8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
   c:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  10:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  14:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  18:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
  1d:	74 27                	je     46 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)+0x46>
  1f:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
  23:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  27:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
  2b:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  2f:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  33:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  37:	31 c0                	xor    eax,eax
  39:	89 c2                	mov    edx,eax
  3b:	e8 00 00 00 00       	call   40 <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)+0x40>	3c: R_X86_64_PLT32	std::__new_allocator<double>::allocate(unsigned long, void const*)-0x4
  40:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  44:	eb 08                	jmp    4e <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)+0x4e>
  46:	31 c0                	xor    eax,eax
  48:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  4c:	eb 00                	jmp    4e <std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)+0x4e>
  4e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  52:	48 83 c4 30          	add    rsp,0x30
  56:	5d                   	pop    rbp
  57:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_:

0000000000000000 <std::vector<double, std::allocator<double> >::_S_relocate(double*, double*, double*, std::allocator<double>&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  18:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  1c:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  20:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  24:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  28:	e8 00 00 00 00       	call   2d <std::vector<double, std::allocator<double> >::_S_relocate(double*, double*, double*, std::allocator<double>&)+0x2d>	29: R_X86_64_PLT32	double* std::__relocate_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)-0x4
  2d:	48 83 c4 20          	add    rsp,0x20
  31:	5d                   	pop    rbp
  32:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_:

0000000000000000 <std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 40          	sub    rsp,0x40
   8:	48 89 7d e0          	mov    QWORD PTR [rbp-0x20],rdi
   c:	48 b8 ff ff ff ff ff ff ff 0f 	movabs rax,0xfffffffffffffff
  16:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  1a:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  1e:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
  22:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  26:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  2a:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  2e:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
  32:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  36:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
  3a:	48 8d 75 d0          	lea    rsi,[rbp-0x30]
  3e:	e8 00 00 00 00       	call   43 <std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&)+0x43>	3f: R_X86_64_PLT32	unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)-0x4
  43:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  47:	eb 00                	jmp    49 <std::vector<double, std::allocator<double> >::_S_max_size(std::allocator<double> const&)+0x49>
  49:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  4d:	48 8b 00             	mov    rax,QWORD PTR [rax]
  50:	48 83 c4 40          	add    rsp,0x40
  54:	5d                   	pop    rbp
  55:	c3                   	ret
  56:	48 89 c7             	mov    rdi,rax
  59:	e8 00 00 00 00       	call   5e <.L.str.6+0x26>	5a: R_X86_64_PLT32	__clang_call_terminate-0x4

Disassembly of section .text._ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv:

0000000000000000 <std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	5d                   	pop    rbp
   d:	c3                   	ret

Disassembly of section .text._ZSt3minImERKT_S2_S2_:

0000000000000000 <unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   8:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
   c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  10:	48 8b 00             	mov    rax,QWORD PTR [rax]
  13:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  17:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
  1a:	73 0a                	jae    26 <unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)+0x26>
  1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  24:	eb 08                	jmp    2e <unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)+0x2e>
  26:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  32:	5d                   	pop    rbp
  33:	c3                   	ret

Disassembly of section .text._ZNSt15__new_allocatorIdE8allocateEmPKv:

0000000000000000 <std::__new_allocator<double>::allocate(unsigned long, void const*)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  14:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  18:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  1c:	48 89 4d f8          	mov    QWORD PTR [rbp-0x8],rcx
  20:	48 b9 ff ff ff ff ff ff ff 0f 	movabs rcx,0xfffffffffffffff
  2a:	48 39 c8             	cmp    rax,rcx
  2d:	76 1a                	jbe    49 <std::__new_allocator<double>::allocate(unsigned long, void const*)+0x49>
  2f:	48 b8 ff ff ff ff ff ff ff 1f 	movabs rax,0x1fffffffffffffff
  39:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  3d:	76 05                	jbe    44 <std::__new_allocator<double>::allocate(unsigned long, void const*)+0x44>
  3f:	e8 00 00 00 00       	call   44 <std::__new_allocator<double>::allocate(unsigned long, void const*)+0x44>	40: R_X86_64_PLT32	std::__throw_bad_array_new_length()-0x4
  44:	e8 00 00 00 00       	call   49 <std::__new_allocator<double>::allocate(unsigned long, void const*)+0x49>	45: R_X86_64_PLT32	std::__throw_bad_alloc()-0x4
  49:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
  4d:	48 c1 e7 03          	shl    rdi,0x3
  51:	e8 00 00 00 00       	call   56 <std::__new_allocator<double>::allocate(unsigned long, void const*)+0x56>	52: R_X86_64_PLT32	operator new(unsigned long)-0x4
  56:	48 83 c4 20          	add    rsp,0x20
  5a:	5d                   	pop    rbp
  5b:	c3                   	ret

Disassembly of section .text._ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_:

0000000000000000 <double* std::__relocate_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 30          	sub    rsp,0x30
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  18:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  1c:	e8 00 00 00 00       	call   21 <double* std::__relocate_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)+0x21>	1d: R_X86_64_PLT32	double* std::__niter_base<double*>(double*)-0x4
  21:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  25:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  29:	e8 00 00 00 00       	call   2e <double* std::__relocate_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)+0x2e>	2a: R_X86_64_PLT32	double* std::__niter_base<double*>(double*)-0x4
  2e:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  32:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
  36:	e8 00 00 00 00       	call   3b <double* std::__relocate_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)+0x3b>	37: R_X86_64_PLT32	double* std::__niter_base<double*>(double*)-0x4
  3b:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  3f:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
  43:	48 89 c2             	mov    rdx,rax
  46:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  4a:	e8 00 00 00 00       	call   4f <double* std::__relocate_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)+0x4f>	4b: R_X86_64_PLT32	std::enable_if<std::__is_bitwise_relocatable<double>::value, double*>::type std::__relocate_a_1<double, double>(double*, double*, double*, std::allocator<double>&)-0x4
  4f:	48 83 c4 30          	add    rsp,0x30
  53:	5d                   	pop    rbp
  54:	c3                   	ret

Disassembly of section .text._ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E:

0000000000000000 <std::enable_if<std::__is_bitwise_relocatable<double>::value, double*>::type std::__relocate_a_1<double, double>(double*, double*, double*, std::allocator<double>&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 30          	sub    rsp,0x30
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  18:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  1c:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  20:	48 29 c8             	sub    rax,rcx
  23:	48 c1 f8 03          	sar    rax,0x3
  27:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  2b:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
  30:	7e 15                	jle    47 <std::enable_if<std::__is_bitwise_relocatable<double>::value, double*>::type std::__relocate_a_1<double, double>(double*, double*, double*, std::allocator<double>&)+0x47>
  32:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
  36:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
  3a:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  3e:	48 c1 e2 03          	shl    rdx,0x3
  42:	e8 00 00 00 00       	call   47 <std::enable_if<std::__is_bitwise_relocatable<double>::value, double*>::type std::__relocate_a_1<double, double>(double*, double*, double*, std::allocator<double>&)+0x47>	43: R_X86_64_PLT32	memmove-0x4
  47:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4b:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
  4f:	48 c1 e1 03          	shl    rcx,0x3
  53:	48 01 c8             	add    rax,rcx
  56:	48 83 c4 30          	add    rsp,0x30
  5a:	5d                   	pop    rbp
  5b:	c3                   	ret

Disassembly of section .text._ZSt12__niter_baseIPdET_S1_:

0000000000000000 <double* std::__niter_base<double*>(double*)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	5d                   	pop    rbp
   d:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_:

0000000000000000 <double& std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 50          	sub    rsp,0x50
   8:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
   c:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
  10:	48 8b 4d c8          	mov    rcx,QWORD PTR [rbp-0x38]
  14:	48 89 4d b0          	mov    QWORD PTR [rbp-0x50],rcx
  18:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
  1c:	48 3b 41 10          	cmp    rax,QWORD PTR [rcx+0x10]
  20:	74 4e                	je     70 <double& std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)+0x70>
  22:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
  26:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  2a:	48 8b 4d c0          	mov    rcx,QWORD PTR [rbp-0x40]
  2e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  32:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  36:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
  3a:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
  3e:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  42:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
  46:	48 89 75 f8          	mov    QWORD PTR [rbp-0x8],rsi
  4a:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
  4e:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
  52:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  56:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  5a:	f2 0f 10 02          	movsd  xmm0,QWORD PTR [rdx]
  5e:	f2 0f 11 01          	movsd  QWORD PTR [rcx],xmm0
  62:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
  66:	48 83 c1 08          	add    rcx,0x8
  6a:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
  6e:	eb 1e                	jmp    8e <double& std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)+0x8e>
  70:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
  74:	e8 00 00 00 00       	call   79 <double& std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)+0x79>	75: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::end()-0x4
  79:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
  7d:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  81:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  85:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
  89:	e8 00 00 00 00       	call   8e <double& std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)+0x8e>	8a: R_X86_64_PLT32	void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)-0x4
  8e:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
  92:	e8 00 00 00 00       	call   97 <double& std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)+0x97>	93: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::back()-0x4
  97:	48 83 c4 50          	add    rsp,0x50
  9b:	5d                   	pop    rbp
  9c:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_:

0000000000000000 <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 81 ec c0 00 00 00 	sub    rsp,0xc0
   b:	48 89 75 c8          	mov    QWORD PTR [rbp-0x38],rsi
   f:	48 89 7d c0          	mov    QWORD PTR [rbp-0x40],rdi
  13:	48 89 55 b8          	mov    QWORD PTR [rbp-0x48],rdx
  17:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
  1b:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
  22:	be 01 00 00 00       	mov    esi,0x1
  27:	48 8d 15 00 00 00 00 	lea    rdx,[rip+0x0]        # 2e <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x2e>	2a: R_X86_64_PC32	.L.str.6-0x4
  2e:	e8 00 00 00 00       	call   33 <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x33>	2f: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const-0x4
  33:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
  3a:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  3e:	48 8b 07             	mov    rax,QWORD PTR [rdi]
  41:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  45:	48 8b 47 08          	mov    rax,QWORD PTR [rdi+0x8]
  49:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  4d:	e8 00 00 00 00       	call   52 <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x52>	4e: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::begin()-0x4
  52:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
  56:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
  5a:	48 8d 75 90          	lea    rsi,[rbp-0x70]
  5e:	e8 00 00 00 00       	call   63 <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x63>	5f: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  63:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
  6a:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
  6e:	48 8b 75 b0          	mov    rsi,QWORD PTR [rbp-0x50]
  72:	e8 00 00 00 00       	call   77 <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x77>	73: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)-0x4
  77:	48 8b 95 78 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x88]
  7e:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
  82:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
  86:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
  8a:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
  8e:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  92:	48 c1 e0 03          	shl    rax,0x3
  96:	48 01 c1             	add    rcx,rax
  99:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  9d:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  a1:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
  a5:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  a9:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  ad:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
  b1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  b5:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
  b9:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
  bd:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  c1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  c5:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  c9:	f2 0f 10 01          	movsd  xmm0,QWORD PTR [rcx]
  cd:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  d1:	48 c7 45 80 00 00 00 00 	mov    QWORD PTR [rbp-0x80],0x0
  d9:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  dd:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
  e4:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
  e8:	e8 00 00 00 00       	call   ed <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0xed>	e9: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  ed:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
  f4:	48 8b 00             	mov    rax,QWORD PTR [rax]
  f7:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
  fe:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
 102:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
 109:	e8 00 00 00 00       	call   10e <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x10e>	10a: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()-0x4
 10e:	48 8b bd 48 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xb8]
 115:	48 8b b5 50 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xb0]
 11c:	48 8b 95 58 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xa8]
 123:	48 89 c1             	mov    rcx,rax
 126:	e8 00 00 00 00       	call   12b <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x12b>	127: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::_S_relocate(double*, double*, double*, std::allocator<double>&)-0x4
 12b:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
 12f:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
 133:	48 83 c0 08          	add    rax,0x8
 137:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
 13b:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
 13f:	e8 00 00 00 00       	call   144 <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x144>	140: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
 144:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
 14b:	48 8b 00             	mov    rax,QWORD PTR [rax]
 14e:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
 155:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
 159:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
 160:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
 164:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
 16b:	e8 00 00 00 00       	call   170 <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x170>	16c: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()-0x4
 170:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
 177:	48 8b b5 68 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x98]
 17e:	48 8b 95 70 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x90]
 185:	48 89 c1             	mov    rcx,rax
 188:	e8 00 00 00 00       	call   18d <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x18d>	189: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::_S_relocate(double*, double*, double*, std::allocator<double>&)-0x4
 18d:	48 8b bd 78 ff ff ff 	mov    rdi,QWORD PTR [rbp-0x88]
 194:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
 198:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
 19c:	48 8b 57 10          	mov    rdx,QWORD PTR [rdi+0x10]
 1a0:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
 1a4:	48 29 c2             	sub    rdx,rax
 1a7:	48 c1 fa 03          	sar    rdx,0x3
 1ab:	e8 00 00 00 00       	call   1b0 <void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)+0x1b0>	1ac: R_X86_64_PLT32	std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)-0x4
 1b0:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
 1b7:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
 1bb:	48 89 08             	mov    QWORD PTR [rax],rcx
 1be:	48 8b 4d 80          	mov    rcx,QWORD PTR [rbp-0x80]
 1c2:	48 89 48 08          	mov    QWORD PTR [rax+0x8],rcx
 1c6:	48 8b 4d 88          	mov    rcx,QWORD PTR [rbp-0x78]
 1ca:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
 1ce:	48 c1 e2 03          	shl    rdx,0x3
 1d2:	48 01 d1             	add    rcx,rdx
 1d5:	48 89 48 10          	mov    QWORD PTR [rax+0x10],rcx
 1d9:	48 81 c4 c0 00 00 00 	add    rsp,0xc0
 1e0:	5d                   	pop    rbp
 1e1:	c3                   	ret

Disassembly of section .text._ZNSt6vectorIdSaIdEE4backEv:

0000000000000000 <std::vector<double, std::allocator<double> >::back()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  10:	e8 00 00 00 00       	call   15 <std::vector<double, std::allocator<double> >::back()+0x15>	11: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::end()-0x4
  15:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  19:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  1d:	be 01 00 00 00       	mov    esi,0x1
  22:	e8 00 00 00 00       	call   27 <std::vector<double, std::allocator<double> >::back()+0x27>	23: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator-(long) const-0x4
  27:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  2b:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  2f:	e8 00 00 00 00       	call   34 <std::vector<double, std::allocator<double> >::back()+0x34>	30: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  34:	48 83 c4 20          	add    rsp,0x20
  38:	5d                   	pop    rbp
  39:	c3                   	ret

Disassembly of section .text._ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc:

0000000000000000 <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 60          	sub    rsp,0x60
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  18:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
  1c:	e8 00 00 00 00       	call   21 <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0x21>	1d: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::max_size() const-0x4
  21:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
  25:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  29:	e8 00 00 00 00       	call   2e <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0x2e>	2a: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::size() const-0x4
  2e:	48 89 c1             	mov    rcx,rax
  31:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  35:	48 29 c8             	sub    rax,rcx
  38:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
  3c:	73 09                	jae    47 <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0x47>
  3e:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
  42:	e8 00 00 00 00       	call   47 <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0x47>	43: R_X86_64_PLT32	std::__throw_length_error(char const*)-0x4
  47:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
  4b:	e8 00 00 00 00       	call   50 <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0x50>	4c: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::size() const-0x4
  50:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
  54:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  58:	e8 00 00 00 00       	call   5d <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0x5d>	59: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::size() const-0x4
  5d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  61:	48 8d 7d d8          	lea    rdi,[rbp-0x28]
  65:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
  69:	e8 00 00 00 00       	call   6e <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0x6e>	6a: R_X86_64_PLT32	unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)-0x4
  6e:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
  72:	48 89 c1             	mov    rcx,rax
  75:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  79:	48 03 01             	add    rax,QWORD PTR [rcx]
  7c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  80:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  84:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  88:	e8 00 00 00 00       	call   8d <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0x8d>	89: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::size() const-0x4
  8d:	48 89 c1             	mov    rcx,rax
  90:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  94:	48 39 c8             	cmp    rax,rcx
  97:	72 1d                	jb     b6 <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0xb6>
  99:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
  9d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  a1:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  a5:	e8 00 00 00 00       	call   aa <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0xaa>	a6: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::max_size() const-0x4
  aa:	48 89 c1             	mov    rcx,rax
  ad:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
  b1:	48 39 c8             	cmp    rax,rcx
  b4:	76 0f                	jbe    c5 <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0xc5>
  b6:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
  ba:	e8 00 00 00 00       	call   bf <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0xbf>	bb: R_X86_64_PLT32	std::vector<double, std::allocator<double> >::max_size() const-0x4
  bf:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  c3:	eb 08                	jmp    cd <std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const+0xcd>
  c5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  c9:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  cd:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  d1:	48 83 c4 60          	add    rsp,0x60
  d5:	5d                   	pop    rbp
  d6:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  14:	e8 00 00 00 00       	call   19 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x19>	15: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  19:	48 8b 00             	mov    rax,QWORD PTR [rax]
  1c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  24:	e8 00 00 00 00       	call   29 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x29>	25: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  29:	48 89 c1             	mov    rcx,rax
  2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  30:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
  33:	48 29 c8             	sub    rax,rcx
  36:	48 c1 f8 03          	sar    rax,0x3
  3a:	48 83 c4 20          	add    rsp,0x20
  3e:	5d                   	pop    rbp
  3f:	c3                   	ret

Disassembly of section .text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	5d                   	pop    rbp
   d:	c3                   	ret

Disassembly of section .text._ZSt3maxImERKT_S2_S2_:

0000000000000000 <unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   8:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
   c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  10:	48 8b 00             	mov    rax,QWORD PTR [rax]
  13:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  17:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
  1a:	73 0a                	jae    26 <unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)+0x26>
  1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  24:	eb 08                	jmp    2e <unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)+0x2e>
  26:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  2e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  32:	5d                   	pop    rbp
  33:	c3                   	ret

Disassembly of section .text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator-(long) const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  14:	48 8b 00             	mov    rax,QWORD PTR [rax]
  17:	31 c9                	xor    ecx,ecx
  19:	48 2b 4d e8          	sub    rcx,QWORD PTR [rbp-0x18]
  1d:	48 c1 e1 03          	shl    rcx,0x3
  21:	48 01 c8             	add    rax,rcx
  24:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  28:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  2c:	48 8d 75 e0          	lea    rsi,[rbp-0x20]
  30:	e8 00 00 00 00       	call   35 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator-(long) const+0x35>	31: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&)-0x4
  35:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  39:	48 83 c4 20          	add    rsp,0x20
  3d:	5d                   	pop    rbp
  3e:	c3                   	ret

Disassembly of section .text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   f:	5d                   	pop    rbp
  10:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::__normal_iterator(double* const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  10:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  14:	48 8b 09             	mov    rcx,QWORD PTR [rcx]
  17:	48 89 08             	mov    QWORD PTR [rax],rcx
  1a:	5d                   	pop    rbp
  1b:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxxeqIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_:

0000000000000000 <bool __gnu_cxx::operator==<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  14:	e8 00 00 00 00       	call   19 <bool __gnu_cxx::operator==<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x19>	15: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  19:	48 8b 00             	mov    rax,QWORD PTR [rax]
  1c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  24:	e8 00 00 00 00       	call   29 <bool __gnu_cxx::operator==<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x29>	25: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  29:	48 89 c1             	mov    rcx,rax
  2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  30:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
  33:	0f 94 c0             	sete   al
  36:	24 01                	and    al,0x1
  38:	0f b6 c0             	movzx  eax,al
  3b:	48 83 c4 20          	add    rsp,0x20
  3f:	5d                   	pop    rbp
  40:	c3                   	ret

Disassembly of section .text._ZSt13__introselectIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_T1_:

0000000000000000 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 81 ec 90 00 00 00 	sub    rsp,0x90
   b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  13:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  17:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
  1b:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  1f:	48 8d 75 f8          	lea    rsi,[rbp-0x8]
  23:	e8 00 00 00 00       	call   28 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x28>	24: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  28:	48 83 f8 03          	cmp    rax,0x3
  2c:	0f 8e b0 00 00 00    	jle    e2 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xe2>
  32:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
  37:	75 52                	jne    8b <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x8b>
  39:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  3d:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  41:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  45:	be 01 00 00 00       	mov    esi,0x1
  4a:	e8 00 00 00 00       	call   4f <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x4f>	4b: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  4f:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  53:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  57:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  5b:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  5f:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
  63:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  67:	e8 00 00 00 00       	call   6c <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x6c>	68: R_X86_64_PLT32	void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)-0x4
  6c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  70:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  74:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  78:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  7c:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
  80:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
  84:	e8 00 00 00 00       	call   89 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x89>	85: R_X86_64_PLT32	void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  89:	eb 7a                	jmp    105 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x105>
  8b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  8f:	48 83 c0 ff          	add    rax,0xffffffffffffffff
  93:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  97:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  9b:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
  9f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  a3:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
  a7:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
  ab:	48 8b 75 90          	mov    rsi,QWORD PTR [rbp-0x70]
  af:	e8 00 00 00 00       	call   b4 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xb4>	b0: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)-0x4
  b4:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  b8:	48 8d 7d a0          	lea    rdi,[rbp-0x60]
  bc:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
  c0:	e8 00 00 00 00       	call   c5 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xc5>	c1: R_X86_64_PLT32	bool __gnu_cxx::operator<=<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  c5:	a8 01                	test   al,0x1
  c7:	75 02                	jne    cb <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xcb>
  c9:	eb 0a                	jmp    d5 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xd5>
  cb:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
  cf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  d3:	eb 08                	jmp    dd <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xdd>
  d5:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
  d9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  dd:	e9 39 ff ff ff       	jmp    1b <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x1b>
  e2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  e6:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
  ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  ee:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
  f5:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
  f9:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
 100:	e8 00 00 00 00       	call   105 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x105>	101: R_X86_64_PLT32	void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)-0x4
 105:	48 81 c4 90 00 00 00 	add    rsp,0x90
 10c:	5d                   	pop    rbp
 10d:	c3                   	ret

Disassembly of section .text._ZSt4__lgIlET_S0_:

0000000000000000 <long std::__lg<long>(long)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  10:	e8 00 00 00 00       	call   15 <long std::__lg<long>(long)+0x15>	11: R_X86_64_PLT32	int std::__bit_width<unsigned long>(unsigned long)-0x4
  15:	83 e8 01             	sub    eax,0x1
  18:	48 98                	cdqe
  1a:	48 83 c4 10          	add    rsp,0x10
  1e:	5d                   	pop    rbp
  1f:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxx5__ops16__iter_less_iterEv:

0000000000000000 <__gnu_cxx::__ops::__iter_less_iter()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	5d                   	pop    rbp
   5:	c3                   	ret

Disassembly of section .text._ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_:

0000000000000000 <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 60          	sub    rsp,0x60
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  18:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  1c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  24:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
  28:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
  2c:	48 8d 55 e7          	lea    rdx,[rbp-0x19]
  30:	e8 00 00 00 00       	call   35 <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x35>	31: R_X86_64_PLT32	void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)-0x4
  35:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  39:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  3d:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
  41:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
  45:	e8 00 00 00 00       	call   4a <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x4a>	46: R_X86_64_PLT32	bool __gnu_cxx::operator< <double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  4a:	a8 01                	test   al,0x1
  4c:	75 02                	jne    50 <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x50>
  4e:	eb 61                	jmp    b1 <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xb1>
  50:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  54:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  5c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  60:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
  64:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
  68:	48 8d 7d e7          	lea    rdi,[rbp-0x19]
  6c:	e8 00 00 00 00       	call   71 <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x71>	6d: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
  71:	a8 01                	test   al,0x1
  73:	75 02                	jne    77 <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x77>
  75:	eb 2d                	jmp    a4 <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xa4>
  77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  7b:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  7f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  83:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  87:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  8b:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  8f:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
  93:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
  97:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
  9b:	48 8d 4d e7          	lea    rcx,[rbp-0x19]
  9f:	e8 00 00 00 00       	call   a4 <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xa4>	a0: R_X86_64_PLT32	void std::__pop_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)-0x4
  a4:	eb 00                	jmp    a6 <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xa6>
  a6:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
  aa:	e8 00 00 00 00       	call   af <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xaf>	ab: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator++()-0x4
  af:	eb 8c                	jmp    3d <void std::__heap_select<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x3d>
  b1:	48 83 c4 60          	add    rsp,0x60
  b5:	5d                   	pop    rbp
  b6:	c3                   	ret

Disassembly of section .text._ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEES6_EvT_T0_:

0000000000000000 <void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  14:	e8 00 00 00 00       	call   19 <void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x19>	15: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  19:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  1d:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  21:	e8 00 00 00 00       	call   26 <void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x26>	22: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  26:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
  2a:	48 89 c6             	mov    rsi,rax
  2d:	e8 00 00 00 00       	call   32 <void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x32>	2e: R_X86_64_PLT32	std::enable_if<__and_<std::__not_<std::__is_tuple_like<double> >, std::is_move_constructible<double>, std::is_move_assignable<double> >::value, void>::type std::swap<double>(double&, double&)-0x4
  32:	48 83 c4 20          	add    rsp,0x20
  36:	5d                   	pop    rbp
  37:	c3                   	ret

Disassembly of section .text._ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_T0_:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 70          	sub    rsp,0x70
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  14:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
  18:	e8 00 00 00 00       	call   1d <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1d>	19: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  1d:	b9 02 00 00 00       	mov    ecx,0x2
  22:	48 99                	cqo
  24:	48 f7 f9             	idiv   rcx
  27:	48 89 c6             	mov    rsi,rax
  2a:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  2e:	e8 00 00 00 00       	call   33 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x33>	2f: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  33:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  37:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  3b:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  3f:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  43:	be 01 00 00 00       	mov    esi,0x1
  48:	e8 00 00 00 00       	call   4d <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x4d>	49: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  4d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  51:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  55:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  59:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  5d:	be 01 00 00 00       	mov    esi,0x1
  62:	e8 00 00 00 00       	call   67 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x67>	63: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator-(long) const-0x4
  67:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  6b:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  6f:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
  73:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  77:	48 8b 4d b8          	mov    rcx,QWORD PTR [rbp-0x48]
  7b:	e8 00 00 00 00       	call   80 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x80>	7c: R_X86_64_PLT32	void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)-0x4
  80:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  84:	be 01 00 00 00       	mov    esi,0x1
  89:	e8 00 00 00 00       	call   8e <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x8e>	8a: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  8e:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  92:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  96:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  9a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  9e:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
  a2:	48 8b 7d a8          	mov    rdi,QWORD PTR [rbp-0x58]
  a6:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
  aa:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
  ae:	e8 00 00 00 00       	call   b3 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition_pivot<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xb3>	af: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)-0x4
  b3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  bb:	48 83 c4 70          	add    rsp,0x70
  bf:	5d                   	pop    rbp
  c0:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxxleIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_:

0000000000000000 <bool __gnu_cxx::operator<=<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  14:	e8 00 00 00 00       	call   19 <bool __gnu_cxx::operator<=<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x19>	15: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  19:	48 8b 00             	mov    rax,QWORD PTR [rax]
  1c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  24:	e8 00 00 00 00       	call   29 <bool __gnu_cxx::operator<=<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x29>	25: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  29:	48 89 c1             	mov    rcx,rax
  2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  30:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
  33:	0f 96 c0             	setbe  al
  36:	24 01                	and    al,0x1
  38:	0f b6 c0             	movzx  eax,al
  3b:	48 83 c4 20          	add    rsp,0x20
  3f:	5d                   	pop    rbp
  40:	c3                   	ret

Disassembly of section .text._ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_:

0000000000000000 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 70          	sub    rsp,0x70
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  14:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
  18:	e8 00 00 00 00       	call   1d <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1d>	19: R_X86_64_PLT32	bool __gnu_cxx::operator==<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  1d:	a8 01                	test   al,0x1
  1f:	75 02                	jne    23 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x23>
  21:	eb 05                	jmp    28 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x28>
  23:	e9 dc 00 00 00       	jmp    104 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x104>
  28:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  2c:	be 01 00 00 00       	mov    esi,0x1
  31:	e8 00 00 00 00       	call   36 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x36>	32: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  36:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  3a:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
  3e:	48 8d 75 f0          	lea    rsi,[rbp-0x10]
  42:	e8 00 00 00 00       	call   47 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x47>	43: R_X86_64_PLT32	bool __gnu_cxx::operator!=<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  47:	a8 01                	test   al,0x1
  49:	75 05                	jne    50 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x50>
  4b:	e9 b4 00 00 00       	jmp    104 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x104>
  50:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  54:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  5c:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  60:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
  64:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  68:	48 8d 7d ef          	lea    rdi,[rbp-0x11]
  6c:	e8 00 00 00 00       	call   71 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x71>	6d: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
  71:	a8 01                	test   al,0x1
  73:	75 02                	jne    77 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x77>
  75:	eb 67                	jmp    de <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xde>
  77:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
  7b:	e8 00 00 00 00       	call   80 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x80>	7c: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  80:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  84:	f2 0f 11 45 c8       	movsd  QWORD PTR [rbp-0x38],xmm0
  89:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  8d:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  91:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  95:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  99:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
  9d:	be 01 00 00 00       	mov    esi,0x1
  a2:	e8 00 00 00 00       	call   a7 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xa7>	a3: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  a7:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  ab:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
  af:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
  b3:	48 8b 55 b0          	mov    rdx,QWORD PTR [rbp-0x50]
  b7:	e8 00 00 00 00       	call   bc <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xbc>	b8: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::move_backward<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  bc:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  c0:	f2 0f 10 45 c8       	movsd  xmm0,QWORD PTR [rbp-0x38]
  c5:	f2 0f 11 45 90       	movsd  QWORD PTR [rbp-0x70],xmm0
  ca:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  ce:	e8 00 00 00 00       	call   d3 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xd3>	cf: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  d3:	f2 0f 10 45 90       	movsd  xmm0,QWORD PTR [rbp-0x70]
  d8:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  dc:	eb 16                	jmp    f4 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xf4>
  de:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  e2:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  e6:	e8 00 00 00 00       	call   eb <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xeb>	e7: R_X86_64_PLT32	__gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)-0x4
  eb:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
  ef:	e8 00 00 00 00       	call   f4 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xf4>	f0: R_X86_64_PLT32	void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)-0x4
  f4:	eb 00                	jmp    f6 <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xf6>
  f6:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
  fa:	e8 00 00 00 00       	call   ff <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xff>	fb: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator++()-0x4
  ff:	e9 36 ff ff ff       	jmp    3a <void std::__insertion_sort<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x3a>
 104:	48 83 c4 70          	add    rsp,0x70
 108:	5d                   	pop    rbp
 109:	c3                   	ret

Disassembly of section .text._ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_RT0_:

0000000000000000 <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 50          	sub    rsp,0x50
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  18:	48 8d 75 f8          	lea    rsi,[rbp-0x8]
  1c:	e8 00 00 00 00       	call   21 <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x21>	1d: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  21:	48 83 f8 02          	cmp    rax,0x2
  25:	7d 02                	jge    29 <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x29>
  27:	eb 7f                	jmp    a8 <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0xa8>
  29:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  2d:	48 8d 75 f8          	lea    rsi,[rbp-0x8]
  31:	e8 00 00 00 00       	call   36 <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x36>	32: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  36:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  3a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  3e:	48 83 e8 02          	sub    rax,0x2
  42:	b9 02 00 00 00       	mov    ecx,0x2
  47:	48 99                	cqo
  49:	48 f7 f9             	idiv   rcx
  4c:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  50:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
  54:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  58:	e8 00 00 00 00       	call   5d <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x5d>	59: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  5d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  61:	48 8d 7d c8          	lea    rdi,[rbp-0x38]
  65:	e8 00 00 00 00       	call   6a <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x6a>	66: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  6a:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  6e:	f2 0f 11 45 d0       	movsd  QWORD PTR [rbp-0x30],xmm0
  73:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  77:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  7b:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
  7f:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  83:	f2 0f 10 45 d0       	movsd  xmm0,QWORD PTR [rbp-0x30]
  88:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
  8c:	e8 00 00 00 00       	call   91 <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x91>	8d: R_X86_64_PLT32	void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)-0x4
  91:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
  96:	75 02                	jne    9a <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x9a>
  98:	eb 0e                	jmp    a8 <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0xa8>
  9a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  9e:	48 83 c0 ff          	add    rax,0xffffffffffffffff
  a2:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  a6:	eb a8                	jmp    50 <void std::__make_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x50>
  a8:	48 83 c4 50          	add    rsp,0x50
  ac:	5d                   	pop    rbp
  ad:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxxltIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_:

0000000000000000 <bool __gnu_cxx::operator< <double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  14:	e8 00 00 00 00       	call   19 <bool __gnu_cxx::operator< <double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x19>	15: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  19:	48 8b 00             	mov    rax,QWORD PTR [rax]
  1c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  24:	e8 00 00 00 00       	call   29 <bool __gnu_cxx::operator< <double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x29>	25: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  29:	48 89 c1             	mov    rcx,rax
  2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  30:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
  33:	0f 92 c0             	setb   al
  36:	24 01                	and    al,0x1
  38:	0f b6 c0             	movzx  eax,al
  3b:	48 83 c4 20          	add    rsp,0x20
  3f:	5d                   	pop    rbp
  40:	c3                   	ret

Disassembly of section .text._ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPdSt6vectorIdSaIdEEEES8_EEbT_T0_:

0000000000000000 <bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 75 f8          	mov    QWORD PTR [rbp-0x8],rsi
   c:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
  10:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  14:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  18:	e8 00 00 00 00       	call   1d <bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const+0x1d>	19: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  1d:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  21:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
  26:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  2a:	e8 00 00 00 00       	call   2f <bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const+0x2f>	2b: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  2f:	f2 0f 10 4d e0       	movsd  xmm1,QWORD PTR [rbp-0x20]
  34:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  38:	66 0f 2e c1          	ucomisd xmm0,xmm1
  3c:	0f 97 c0             	seta   al
  3f:	24 01                	and    al,0x1
  41:	0f b6 c0             	movzx  eax,al
  44:	48 83 c4 20          	add    rsp,0x20
  48:	5d                   	pop    rbp
  49:	c3                   	ret

Disassembly of section .text._ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_RT0_:

0000000000000000 <void std::__pop_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 40          	sub    rsp,0x40
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  18:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  1c:	e8 00 00 00 00       	call   21 <void std::__pop_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x21>	1d: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  21:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  25:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
  2a:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  2e:	e8 00 00 00 00       	call   33 <void std::__pop_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x33>	2f: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  33:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  37:	f2 0f 11 45 c0       	movsd  QWORD PTR [rbp-0x40],xmm0
  3c:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  40:	e8 00 00 00 00       	call   45 <void std::__pop_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x45>	41: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  45:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
  4a:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  4e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  52:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  56:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  5a:	48 8d 75 f8          	lea    rsi,[rbp-0x8]
  5e:	e8 00 00 00 00       	call   63 <void std::__pop_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x63>	5f: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::difference_type __gnu_cxx::operator-<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  63:	48 89 c2             	mov    rdx,rax
  66:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
  6b:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  6f:	31 c0                	xor    eax,eax
  71:	89 c6                	mov    esi,eax
  73:	e8 00 00 00 00       	call   78 <void std::__pop_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter&)+0x78>	74: R_X86_64_PLT32	void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)-0x4
  78:	48 83 c4 40          	add    rsp,0x40
  7c:	5d                   	pop    rbp
  7d:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEppEv:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator++()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	48 8b 08             	mov    rcx,QWORD PTR [rax]
   f:	48 83 c1 08          	add    rcx,0x8
  13:	48 89 08             	mov    QWORD PTR [rax],rcx
  16:	5d                   	pop    rbp
  17:	c3                   	ret

Disassembly of section .text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_:

0000000000000000 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 81 ec a0 00 00 00 	sub    rsp,0xa0
   b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   f:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  13:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  17:	f2 0f 11 45 d8       	movsd  QWORD PTR [rbp-0x28],xmm0
  1c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  24:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  28:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  2c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  30:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
  34:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  38:	48 83 e8 01          	sub    rax,0x1
  3c:	b9 02 00 00 00       	mov    ecx,0x2
  41:	48 99                	cqo
  43:	48 f7 f9             	idiv   rcx
  46:	48 89 c1             	mov    rcx,rax
  49:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
  4d:	48 39 c8             	cmp    rax,rcx
  50:	0f 8d b1 00 00 00    	jge    107 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x107>
  56:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  5a:	48 83 c0 01          	add    rax,0x1
  5e:	48 d1 e0             	shl    rax,1
  61:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  65:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
  69:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  6d:	e8 00 00 00 00       	call   72 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x72>	6e: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  72:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  76:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
  7a:	48 83 ee 01          	sub    rsi,0x1
  7e:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  82:	e8 00 00 00 00       	call   87 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x87>	83: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  87:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  8b:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
  8f:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
  93:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
  97:	e8 00 00 00 00       	call   9c <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x9c>	98: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
  9c:	a8 01                	test   al,0x1
  9e:	75 02                	jne    a2 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xa2>
  a0:	eb 0c                	jmp    ae <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xae>
  a2:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  a6:	48 83 c0 ff          	add    rax,0xffffffffffffffff
  aa:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  ae:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
  b2:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  b6:	e8 00 00 00 00       	call   bb <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xbb>	b7: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  bb:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  bf:	48 8d 7d b0          	lea    rdi,[rbp-0x50]
  c3:	e8 00 00 00 00       	call   c8 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xc8>	c4: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  c8:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  cc:	f2 0f 11 85 78 ff ff ff 	movsd  QWORD PTR [rbp-0x88],xmm0
  d4:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
  d8:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  dc:	e8 00 00 00 00       	call   e1 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xe1>	dd: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  e1:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  e5:	48 8d 7d a8          	lea    rdi,[rbp-0x58]
  e9:	e8 00 00 00 00       	call   ee <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xee>	ea: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  ee:	f2 0f 10 85 78 ff ff ff 	movsd  xmm0,QWORD PTR [rbp-0x88]
  f6:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  fa:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  fe:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 102:	e9 25 ff ff ff       	jmp    2c <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x2c>
 107:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10b:	48 83 e0 01          	and    rax,0x1
 10f:	48 83 f8 00          	cmp    rax,0x0
 113:	0f 85 97 00 00 00    	jne    1b0 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x1b0>
 119:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 11d:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
 124:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 128:	48 83 e8 02          	sub    rax,0x2
 12c:	b9 02 00 00 00       	mov    ecx,0x2
 131:	48 99                	cqo
 133:	48 f7 f9             	idiv   rcx
 136:	48 89 c1             	mov    rcx,rax
 139:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
 140:	48 39 c8             	cmp    rax,rcx
 143:	75 6b                	jne    1b0 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x1b0>
 145:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 149:	48 83 c0 01          	add    rax,0x1
 14d:	48 d1 e0             	shl    rax,1
 150:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
 154:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
 158:	48 83 ee 01          	sub    rsi,0x1
 15c:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
 160:	e8 00 00 00 00       	call   165 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x165>	161: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
 165:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
 169:	48 8d 7d a0          	lea    rdi,[rbp-0x60]
 16d:	e8 00 00 00 00       	call   172 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x172>	16e: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
 172:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
 176:	f2 0f 11 85 68 ff ff ff 	movsd  QWORD PTR [rbp-0x98],xmm0
 17e:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
 182:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
 186:	e8 00 00 00 00       	call   18b <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x18b>	187: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
 18b:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
 18f:	48 8d 7d 98          	lea    rdi,[rbp-0x68]
 193:	e8 00 00 00 00       	call   198 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x198>	194: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
 198:	f2 0f 10 85 68 ff ff ff 	movsd  xmm0,QWORD PTR [rbp-0x98]
 1a0:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
 1a4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 1a8:	48 83 e8 01          	sub    rax,0x1
 1ac:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 1b0:	48 8d 7d 97          	lea    rdi,[rbp-0x69]
 1b4:	e8 00 00 00 00       	call   1b9 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x1b9>	1b5: R_X86_64_PLT32	__gnu_cxx::__ops::_Iter_less_val::_Iter_less_val(__gnu_cxx::__ops::_Iter_less_iter)-0x4
 1b9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1bd:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
 1c1:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
 1c5:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
 1c9:	f2 0f 10 45 d8       	movsd  xmm0,QWORD PTR [rbp-0x28]
 1ce:	48 8b 7d 88          	mov    rdi,QWORD PTR [rbp-0x78]
 1d2:	48 8d 4d 97          	lea    rcx,[rbp-0x69]
 1d6:	e8 00 00 00 00       	call   1db <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x1db>	1d7: R_X86_64_PLT32	void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)-0x4
 1db:	48 81 c4 a0 00 00 00 	add    rsp,0xa0
 1e2:	5d                   	pop    rbp
 1e3:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxx5__ops14_Iter_less_valC2ENS0_15_Iter_less_iterE:

0000000000000000 <__gnu_cxx::__ops::_Iter_less_val::_Iter_less_val(__gnu_cxx::__ops::_Iter_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   8:	5d                   	pop    rbp
   9:	c3                   	ret

Disassembly of section .text._ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEldNS0_5__ops14_Iter_less_valEEvT_T0_SA_T1_RT2_:

0000000000000000 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 70          	sub    rsp,0x70
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
  19:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
  1d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  21:	48 83 e8 01          	sub    rax,0x1
  25:	b9 02 00 00 00       	mov    ecx,0x2
  2a:	48 99                	cqo
  2c:	48 f7 f9             	idiv   rcx
  2f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  33:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  37:	31 c0                	xor    eax,eax
  39:	48 3b 4d e8          	cmp    rcx,QWORD PTR [rbp-0x18]
  3d:	88 45 af             	mov    BYTE PTR [rbp-0x51],al
  40:	7e 2d                	jle    6f <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0x6f>
  42:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  46:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  4a:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
  4e:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  52:	e8 00 00 00 00       	call   57 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0x57>	53: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  57:	48 8b 7d a0          	mov    rdi,QWORD PTR [rbp-0x60]
  5b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  5f:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
  63:	48 8d 55 e0          	lea    rdx,[rbp-0x20]
  67:	e8 00 00 00 00       	call   6c <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0x6c>	68: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_val::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) const-0x4
  6c:	88 45 af             	mov    BYTE PTR [rbp-0x51],al
  6f:	8a 45 af             	mov    al,BYTE PTR [rbp-0x51]
  72:	a8 01                	test   al,0x1
  74:	75 02                	jne    78 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0x78>
  76:	eb 69                	jmp    e1 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0xe1>
  78:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
  7c:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  80:	e8 00 00 00 00       	call   85 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0x85>	81: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  85:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  89:	48 8d 7d c0          	lea    rdi,[rbp-0x40]
  8d:	e8 00 00 00 00       	call   92 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0x92>	8e: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  92:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  96:	f2 0f 11 45 98       	movsd  QWORD PTR [rbp-0x68],xmm0
  9b:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  9f:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  a3:	e8 00 00 00 00       	call   a8 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0xa8>	a4: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  a8:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  ac:	48 8d 7d b8          	lea    rdi,[rbp-0x48]
  b0:	e8 00 00 00 00       	call   b5 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0xb5>	b1: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  b5:	f2 0f 10 45 98       	movsd  xmm0,QWORD PTR [rbp-0x68]
  ba:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  be:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  c2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  c6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  ca:	48 83 e8 01          	sub    rax,0x1
  ce:	b9 02 00 00 00       	mov    ecx,0x2
  d3:	48 99                	cqo
  d5:	48 f7 f9             	idiv   rcx
  d8:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  dc:	e9 52 ff ff ff       	jmp    33 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0x33>
  e1:	f2 0f 10 45 e0       	movsd  xmm0,QWORD PTR [rbp-0x20]
  e6:	f2 0f 11 45 90       	movsd  QWORD PTR [rbp-0x70],xmm0
  eb:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  ef:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  f3:	e8 00 00 00 00       	call   f8 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0xf8>	f4: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  f8:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  fc:	48 8d 7d b0          	lea    rdi,[rbp-0x50]
 100:	e8 00 00 00 00       	call   105 <void std::__push_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_val&)+0x105>	101: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
 105:	f2 0f 10 45 90       	movsd  xmm0,QWORD PTR [rbp-0x70]
 10a:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
 10e:	48 83 c4 70          	add    rsp,0x70
 112:	5d                   	pop    rbp
 113:	c3                   	ret

Disassembly of section .text._ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPdSt6vectorIdSaIdEEEEdEEbT_RT0_:

0000000000000000 <bool __gnu_cxx::__ops::_Iter_less_val::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 75 f8          	mov    QWORD PTR [rbp-0x8],rsi
   c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  18:	e8 00 00 00 00       	call   1d <bool __gnu_cxx::__ops::_Iter_less_val::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&) const+0x1d>	19: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  1d:	f2 0f 10 08          	movsd  xmm1,QWORD PTR [rax]
  21:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  25:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  29:	66 0f 2e c1          	ucomisd xmm0,xmm1
  2d:	0f 97 c0             	seta   al
  30:	24 01                	and    al,0x1
  32:	0f b6 c0             	movzx  eax,al
  35:	48 83 c4 20          	add    rsp,0x20
  39:	5d                   	pop    rbp
  3a:	c3                   	ret

Disassembly of section .text._ZSt4swapIdENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_:

0000000000000000 <std::enable_if<__and_<std::__not_<std::__is_tuple_like<double> >, std::is_move_constructible<double>, std::is_move_assignable<double> >::value, void>::type std::swap<double>(double&, double&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  10:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  14:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
  19:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  1d:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  21:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  25:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  29:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
  2e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  32:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  36:	5d                   	pop    rbp
  37:	c3                   	ret

Disassembly of section .text._ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_:

0000000000000000 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
   b:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   f:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  13:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  17:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
  1b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  1f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  23:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  27:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  2b:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
  2f:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
  33:	48 8d 7d df          	lea    rdi,[rbp-0x21]
  37:	e8 00 00 00 00       	call   3c <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x3c>	38: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
  3c:	a8 01                	test   al,0x1
  3e:	75 05                	jne    45 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x45>
  40:	e9 b6 00 00 00       	jmp    fb <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xfb>
  45:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  49:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  4d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  51:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  55:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
  59:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
  5d:	48 8d 7d df          	lea    rdi,[rbp-0x21]
  61:	e8 00 00 00 00       	call   66 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x66>	62: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
  66:	a8 01                	test   al,0x1
  68:	75 02                	jne    6c <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x6c>
  6a:	eb 1f                	jmp    8b <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x8b>
  6c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  70:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  74:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  78:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  7c:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
  80:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
  84:	e8 00 00 00 00       	call   89 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x89>	85: R_X86_64_PLT32	void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  89:	eb 6b                	jmp    f6 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xf6>
  8b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  8f:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  93:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  97:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
  9b:	48 8b 75 a0          	mov    rsi,QWORD PTR [rbp-0x60]
  9f:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
  a3:	48 8d 7d df          	lea    rdi,[rbp-0x21]
  a7:	e8 00 00 00 00       	call   ac <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xac>	a8: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
  ac:	a8 01                	test   al,0x1
  ae:	75 02                	jne    b2 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xb2>
  b0:	eb 1f                	jmp    d1 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xd1>
  b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  b6:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
  ba:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  be:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
  c2:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
  c6:	48 8b 75 88          	mov    rsi,QWORD PTR [rbp-0x78]
  ca:	e8 00 00 00 00       	call   cf <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xcf>	cb: R_X86_64_PLT32	void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  cf:	eb 23                	jmp    f4 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xf4>
  d1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  d5:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
  d9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  dd:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
  e4:	48 8b 7d 80          	mov    rdi,QWORD PTR [rbp-0x80]
  e8:	48 8b b5 78 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x88]
  ef:	e8 00 00 00 00       	call   f4 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xf4>	f0: R_X86_64_PLT32	void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  f4:	eb 00                	jmp    f6 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xf6>
  f6:	e9 ec 00 00 00       	jmp    1e7 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1e7>
  fb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  ff:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
 106:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 10a:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
 111:	48 8b b5 70 ff ff ff 	mov    rsi,QWORD PTR [rbp-0x90]
 118:	48 8b 95 68 ff ff ff 	mov    rdx,QWORD PTR [rbp-0x98]
 11f:	48 8d 7d df          	lea    rdi,[rbp-0x21]
 123:	e8 00 00 00 00       	call   128 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x128>	124: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
 128:	a8 01                	test   al,0x1
 12a:	75 02                	jne    12e <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x12e>
 12c:	eb 2e                	jmp    15c <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x15c>
 12e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 132:	48 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rax
 139:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 13d:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
 144:	48 8b bd 60 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xa0]
 14b:	48 8b b5 58 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xa8]
 152:	e8 00 00 00 00       	call   157 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x157>	153: R_X86_64_PLT32	void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
 157:	e9 89 00 00 00       	jmp    1e5 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1e5>
 15c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 160:	48 89 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],rax
 167:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 16b:	48 89 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],rax
 172:	48 8b b5 50 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xb0]
 179:	48 8b 95 48 ff ff ff 	mov    rdx,QWORD PTR [rbp-0xb8]
 180:	48 8d 7d df          	lea    rdi,[rbp-0x21]
 184:	e8 00 00 00 00       	call   189 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x189>	185: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
 189:	a8 01                	test   al,0x1
 18b:	75 02                	jne    18f <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x18f>
 18d:	eb 2b                	jmp    1ba <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1ba>
 18f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 193:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
 19a:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 19e:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
 1a5:	48 8b bd 40 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xc0]
 1ac:	48 8b b5 38 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xc8]
 1b3:	e8 00 00 00 00       	call   1b8 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1b8>	1b4: R_X86_64_PLT32	void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
 1b8:	eb 29                	jmp    1e3 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1e3>
 1ba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 1be:	48 89 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],rax
 1c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
 1c9:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
 1d0:	48 8b bd 30 ff ff ff 	mov    rdi,QWORD PTR [rbp-0xd0]
 1d7:	48 8b b5 28 ff ff ff 	mov    rsi,QWORD PTR [rbp-0xd8]
 1de:	e8 00 00 00 00       	call   1e3 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1e3>	1df: R_X86_64_PLT32	void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
 1e3:	eb 00                	jmp    1e5 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1e5>
 1e5:	eb 00                	jmp    1e7 <void std::__move_median_to_first<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x1e7>
 1e7:	48 81 c4 e0 00 00 00 	add    rsp,0xe0
 1ee:	5d                   	pop    rbp
 1ef:	c3                   	ret

Disassembly of section .text._ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_S9_T0_:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 60          	sub    rsp,0x60
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  14:	eb 00                	jmp    16 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x16>
  16:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  1a:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  1e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  22:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  26:	48 8b 75 d0          	mov    rsi,QWORD PTR [rbp-0x30]
  2a:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
  2e:	48 8d 7d df          	lea    rdi,[rbp-0x21]
  32:	e8 00 00 00 00       	call   37 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x37>	33: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
  37:	a8 01                	test   al,0x1
  39:	75 02                	jne    3d <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x3d>
  3b:	eb 0b                	jmp    48 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x48>
  3d:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  41:	e8 00 00 00 00       	call   46 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x46>	42: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator++()-0x4
  46:	eb ce                	jmp    16 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x16>
  48:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  4c:	e8 00 00 00 00       	call   51 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x51>	4d: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator--()-0x4
  51:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  55:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  59:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  5d:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  61:	48 8b 75 c0          	mov    rsi,QWORD PTR [rbp-0x40]
  65:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
  69:	48 8d 7d df          	lea    rdi,[rbp-0x21]
  6d:	e8 00 00 00 00       	call   72 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x72>	6e: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
  72:	a8 01                	test   al,0x1
  74:	75 02                	jne    78 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x78>
  76:	eb 0b                	jmp    83 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x83>
  78:	48 8d 7d e8          	lea    rdi,[rbp-0x18]
  7c:	e8 00 00 00 00       	call   81 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x81>	7d: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator--()-0x4
  81:	eb ce                	jmp    51 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x51>
  83:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  87:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
  8b:	e8 00 00 00 00       	call   90 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x90>	8c: R_X86_64_PLT32	bool __gnu_cxx::operator< <double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)-0x4
  90:	a8 01                	test   al,0x1
  92:	75 12                	jne    a6 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xa6>
  94:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  98:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  9c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  a0:	48 83 c4 60          	add    rsp,0x60
  a4:	5d                   	pop    rbp
  a5:	c3                   	ret
  a6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  aa:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  ae:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  b2:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  b6:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
  ba:	48 8b 75 a8          	mov    rsi,QWORD PTR [rbp-0x58]
  be:	e8 00 00 00 00       	call   c3 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xc3>	bf: R_X86_64_PLT32	void std::iter_swap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  c3:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  c7:	e8 00 00 00 00       	call   cc <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0xcc>	c8: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator++()-0x4
  cc:	e9 43 ff ff ff       	jmp    14 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Iter_less_iter)+0x14>

Disassembly of section .text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmmEv:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator--()>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   c:	48 8b 08             	mov    rcx,QWORD PTR [rax]
   f:	48 83 c1 f8          	add    rcx,0xfffffffffffffff8
  13:	48 89 08             	mov    QWORD PTR [rax],rcx
  16:	5d                   	pop    rbp
  17:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxxneIPdSt6vectorIdSaIdEEEEbRKNS_17__normal_iteratorIT_T0_EESA_:

0000000000000000 <bool __gnu_cxx::operator!=<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  14:	e8 00 00 00 00       	call   19 <bool __gnu_cxx::operator!=<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x19>	15: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  19:	48 8b 00             	mov    rax,QWORD PTR [rax]
  1c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20:	48 8b 7d f0          	mov    rdi,QWORD PTR [rbp-0x10]
  24:	e8 00 00 00 00       	call   29 <bool __gnu_cxx::operator!=<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > const&)+0x29>	25: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  29:	48 89 c1             	mov    rcx,rax
  2c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  30:	48 3b 01             	cmp    rax,QWORD PTR [rcx]
  33:	0f 95 c0             	setne  al
  36:	24 01                	and    al,0x1
  38:	0f b6 c0             	movzx  eax,al
  3b:	48 83 c4 20          	add    rsp,0x20
  3f:	5d                   	pop    rbp
  40:	c3                   	ret

Disassembly of section .text._ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEES6_ET0_T_S8_S7_:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::move_backward<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 50          	sub    rsp,0x50
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  14:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  18:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  1c:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  20:	e8 00 00 00 00       	call   25 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::move_backward<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x25>	21: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__miter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  25:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  29:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2d:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  31:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
  35:	e8 00 00 00 00       	call   3a <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::move_backward<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x3a>	36: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__miter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  3a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  3e:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  42:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  46:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
  4a:	48 8b 75 c8          	mov    rsi,QWORD PTR [rbp-0x38]
  4e:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
  52:	e8 00 00 00 00       	call   57 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::move_backward<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x57>	53: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_backward_a<true, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  57:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  5b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  5f:	48 83 c4 50          	add    rsp,0x50
  63:	5d                   	pop    rbp
  64:	c3                   	ret

Disassembly of section .text._ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEENS0_5__ops14_Val_less_iterEEvT_T0_:

0000000000000000 <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 40          	sub    rsp,0x40
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  10:	e8 00 00 00 00       	call   15 <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x15>	11: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  15:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  19:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
  1e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  22:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  26:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
  2a:	e8 00 00 00 00       	call   2f <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x2f>	2b: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator--()-0x4
  2f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  33:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  37:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  3b:	48 8d 7d f7          	lea    rdi,[rbp-0x9]
  3f:	48 8d 75 e8          	lea    rsi,[rbp-0x18]
  43:	e8 00 00 00 00       	call   48 <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x48>	44: R_X86_64_PLT32	bool __gnu_cxx::__ops::_Val_less_iter::operator()<double, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(double&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const-0x4
  48:	a8 01                	test   al,0x1
  4a:	75 02                	jne    4e <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x4e>
  4c:	eb 37                	jmp    85 <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x85>
  4e:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
  52:	e8 00 00 00 00       	call   57 <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x57>	53: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  57:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  5b:	f2 0f 11 45 d0       	movsd  QWORD PTR [rbp-0x30],xmm0
  60:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  64:	e8 00 00 00 00       	call   69 <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x69>	65: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  69:	f2 0f 10 45 d0       	movsd  xmm0,QWORD PTR [rbp-0x30]
  6e:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  72:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  76:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  7a:	48 8d 7d e0          	lea    rdi,[rbp-0x20]
  7e:	e8 00 00 00 00       	call   83 <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x83>	7f: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator--()-0x4
  83:	eb aa                	jmp    2f <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x2f>
  85:	f2 0f 10 45 e8       	movsd  xmm0,QWORD PTR [rbp-0x18]
  8a:	f2 0f 11 45 c8       	movsd  QWORD PTR [rbp-0x38],xmm0
  8f:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  93:	e8 00 00 00 00       	call   98 <void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__ops::_Val_less_iter)+0x98>	94: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  98:	f2 0f 10 45 c8       	movsd  xmm0,QWORD PTR [rbp-0x38]
  9d:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  a1:	48 83 c4 40          	add    rsp,0x40
  a5:	5d                   	pop    rbp
  a6:	c3                   	ret

Disassembly of section .text._ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE:

0000000000000000 <__gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	5d                   	pop    rbp
   5:	c3                   	ret

Disassembly of section .text._ZSt22__copy_move_backward_aILb1EN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEES6_ET1_T0_S8_S7_:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_backward_a<true, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 50          	sub    rsp,0x50
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  14:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  18:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  1c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  24:	48 8b 7d d0          	mov    rdi,QWORD PTR [rbp-0x30]
  28:	e8 00 00 00 00       	call   2d <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_backward_a<true, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x2d>	29: R_X86_64_PLT32	double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  2d:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  31:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  35:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  39:	48 8b 7d c8          	mov    rdi,QWORD PTR [rbp-0x38]
  3d:	e8 00 00 00 00       	call   42 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_backward_a<true, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x42>	3e: R_X86_64_PLT32	double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  42:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  46:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  4a:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  4e:	48 8b 7d c0          	mov    rdi,QWORD PTR [rbp-0x40]
  52:	e8 00 00 00 00       	call   57 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_backward_a<true, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x57>	53: R_X86_64_PLT32	double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  57:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
  5b:	48 8b 75 b8          	mov    rsi,QWORD PTR [rbp-0x48]
  5f:	48 89 c2             	mov    rdx,rax
  62:	e8 00 00 00 00       	call   67 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_backward_a<true, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x67>	63: R_X86_64_PLT32	double* std::__copy_move_backward_a1<true, double*, double*>(double*, double*, double*)-0x4
  67:	48 89 c6             	mov    rsi,rax
  6a:	48 8b 7d d8          	mov    rdi,QWORD PTR [rbp-0x28]
  6e:	e8 00 00 00 00       	call   73 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__copy_move_backward_a<true, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x73>	6f: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*)-0x4
  73:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  77:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  7b:	48 83 c4 50          	add    rsp,0x50
  7f:	5d                   	pop    rbp
  80:	c3                   	ret

Disassembly of section .text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEEET_S7_:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__miter_base<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  14:	5d                   	pop    rbp
  15:	c3                   	ret

Disassembly of section .text._ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEES2_ET_S7_T0_:

0000000000000000 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 30          	sub    rsp,0x30
   8:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   c:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  10:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  14:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  18:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  1c:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  20:	48 8b 7d e0          	mov    rdi,QWORD PTR [rbp-0x20]
  24:	e8 00 00 00 00       	call   29 <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*)+0x29>	25: R_X86_64_PLT32	double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)-0x4
  29:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
  2d:	48 29 c6             	sub    rsi,rax
  30:	48 c1 fe 03          	sar    rsi,0x3
  34:	48 8d 7d f0          	lea    rdi,[rbp-0x10]
  38:	e8 00 00 00 00       	call   3d <__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double*)+0x3d>	39: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator+(long) const-0x4
  3d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  41:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  45:	48 83 c4 30          	add    rsp,0x30
  49:	5d                   	pop    rbp
  4a:	c3                   	ret

Disassembly of section .text._ZSt23__copy_move_backward_a1ILb1EPdS0_ET1_T0_S2_S1_:

0000000000000000 <double* std::__copy_move_backward_a1<true, double*, double*>(double*, double*, double*)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  18:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  1c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  20:	e8 00 00 00 00       	call   25 <double* std::__copy_move_backward_a1<true, double*, double*>(double*, double*, double*)+0x25>	21: R_X86_64_PLT32	double* std::__copy_move_backward_a2<true, double*, double*>(double*, double*, double*)-0x4
  25:	48 83 c4 20          	add    rsp,0x20
  29:	5d                   	pop    rbp
  2a:	c3                   	ret

Disassembly of section .text._ZSt12__niter_baseIPdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE:

0000000000000000 <double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  10:	e8 00 00 00 00       	call   15 <double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)+0x15>	11: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::base() const-0x4
  15:	48 8b 00             	mov    rax,QWORD PTR [rax]
  18:	48 83 c4 10          	add    rsp,0x10
  1c:	5d                   	pop    rbp
  1d:	c3                   	ret

Disassembly of section .text._ZSt23__copy_move_backward_a2ILb1EPdS0_ET1_T0_S2_S1_:

0000000000000000 <double* std::__copy_move_backward_a2<true, double*, double*>(double*, double*, double*)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  18:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
  1c:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  20:	e8 00 00 00 00       	call   25 <double* std::__copy_move_backward_a2<true, double*, double*>(double*, double*, double*)+0x25>	21: R_X86_64_PLT32	double* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<double, double>(double*, double*, double*)-0x4
  25:	48 83 c4 20          	add    rsp,0x20
  29:	5d                   	pop    rbp
  2a:	c3                   	ret

Disassembly of section .text._ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIddEEPT0_PT_S6_S4_:

0000000000000000 <double* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<double, double>(double*, double*, double*)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  10:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  14:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  18:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  1c:	48 29 c8             	sub    rax,rcx
  1f:	48 c1 f8 03          	sar    rax,0x3
  23:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  27:	48 83 7d e0 01       	cmp    QWORD PTR [rbp-0x20],0x1
  2c:	7e 24                	jle    52 <double* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<double, double>(double*, double*, double*)+0x52>
  2e:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
  32:	31 c0                	xor    eax,eax
  34:	48 2b 45 e0          	sub    rax,QWORD PTR [rbp-0x20]
  38:	48 c1 e0 03          	shl    rax,0x3
  3c:	48 01 c7             	add    rdi,rax
  3f:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
  43:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  47:	48 c1 e2 03          	shl    rdx,0x3
  4b:	e8 00 00 00 00       	call   50 <double* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<double, double>(double*, double*, double*)+0x50>	4c: R_X86_64_PLT32	memmove-0x4
  50:	eb 1a                	jmp    6c <double* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<double, double>(double*, double*, double*)+0x6c>
  52:	48 83 7d e0 01       	cmp    QWORD PTR [rbp-0x20],0x1
  57:	75 11                	jne    6a <double* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<double, double>(double*, double*, double*)+0x6a>
  59:	48 8b 7d e8          	mov    rdi,QWORD PTR [rbp-0x18]
  5d:	48 83 c7 f8          	add    rdi,0xfffffffffffffff8
  61:	48 8b 75 f8          	mov    rsi,QWORD PTR [rbp-0x8]
  65:	e8 00 00 00 00       	call   6a <double* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<double, double>(double*, double*, double*)+0x6a>	66: R_X86_64_PLT32	void std::__copy_move<true, false, std::random_access_iterator_tag>::__assign_one<double, double>(double*, double*)-0x4
  6a:	eb 00                	jmp    6c <double* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<double, double>(double*, double*, double*)+0x6c>
  6c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  70:	31 c9                	xor    ecx,ecx
  72:	48 2b 4d e0          	sub    rcx,QWORD PTR [rbp-0x20]
  76:	48 c1 e1 03          	shl    rcx,0x3
  7a:	48 01 c8             	add    rax,rcx
  7d:	48 83 c4 20          	add    rsp,0x20
  81:	5d                   	pop    rbp
  82:	c3                   	ret

Disassembly of section .text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE12__assign_oneIddEEvPT_PT0_:

0000000000000000 <void std::__copy_move<true, false, std::random_access_iterator_tag>::__assign_one<double, double>(double*, double*)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
   c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  10:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  14:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  18:	f2 0f 11 00          	movsd  QWORD PTR [rax],xmm0
  1c:	5d                   	pop    rbp
  1d:	c3                   	ret

Disassembly of section .text._ZNK9__gnu_cxx5__ops14_Val_less_iterclIdNS_17__normal_iteratorIPdSt6vectorIdSaIdEEEEEEbRT_T0_:

0000000000000000 <bool __gnu_cxx::__ops::_Val_less_iter::operator()<double, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(double&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 20          	sub    rsp,0x20
   8:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
   c:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
  10:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
  14:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  18:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  1c:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
  21:	48 8d 7d f8          	lea    rdi,[rbp-0x8]
  25:	e8 00 00 00 00       	call   2a <bool __gnu_cxx::__ops::_Val_less_iter::operator()<double, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(double&, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) const+0x2a>	26: R_X86_64_PLT32	__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >::operator*() const-0x4
  2a:	f2 0f 10 4d e0       	movsd  xmm1,QWORD PTR [rbp-0x20]
  2f:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  33:	66 0f 2e c1          	ucomisd xmm0,xmm1
  37:	0f 97 c0             	seta   al
  3a:	24 01                	and    al,0x1
  3c:	0f b6 c0             	movzx  eax,al
  3f:	48 83 c4 20          	add    rsp,0x20
  43:	5d                   	pop    rbp
  44:	c3                   	ret

Disassembly of section .text._ZSt11__bit_widthImEiT_:

0000000000000000 <int std::__bit_width<unsigned long>(unsigned long)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 10          	sub    rsp,0x10
   8:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
   c:	c7 45 f4 40 00 00 00 	mov    DWORD PTR [rbp-0xc],0x40
  13:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
  17:	e8 00 00 00 00       	call   1c <int std::__bit_width<unsigned long>(unsigned long)+0x1c>	18: R_X86_64_PLT32	int std::__countl_zero<unsigned long>(unsigned long)-0x4
  1c:	89 c1                	mov    ecx,eax
  1e:	b8 40 00 00 00       	mov    eax,0x40
  23:	29 c8                	sub    eax,ecx
  25:	48 83 c4 10          	add    rsp,0x10
  29:	5d                   	pop    rbp
  2a:	c3                   	ret

Disassembly of section .text._ZSt13__countl_zeroImEiT_:

0000000000000000 <int std::__countl_zero<unsigned long>(unsigned long)>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
   8:	c7 45 ec 40 00 00 00 	mov    DWORD PTR [rbp-0x14],0x40
   f:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
  14:	75 09                	jne    1f <int std::__countl_zero<unsigned long>(unsigned long)+0x1f>
  16:	c7 45 fc 40 00 00 00 	mov    DWORD PTR [rbp-0x4],0x40
  1d:	eb 2e                	jmp    4d <int std::__countl_zero<unsigned long>(unsigned long)+0x4d>
  1f:	c7 45 e8 40 00 00 00 	mov    DWORD PTR [rbp-0x18],0x40
  26:	c7 45 e4 40 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x40
  2d:	c7 45 e0 20 00 00 00 	mov    DWORD PTR [rbp-0x20],0x20
  34:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
  3b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  3f:	48 0f bd c0          	bsr    rax,rax
  43:	48 83 f0 3f          	xor    rax,0x3f
  47:	83 e8 00             	sub    eax,0x0
  4a:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  4d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  50:	5d                   	pop    rbp
  51:	c3                   	ret
